INFO  24-05-29 21:40:19 [main] [DsilBackendApplication-logStarting:50] - Starting DsilBackendApplication using Java 17.0.11 with PID 138724 (C:\finalproject\DSILbackend\target\classes started by 문상현 in C:\finalproject\DSILbackend)
INFO  24-05-29 21:40:19 [main] [DsilBackendApplication-logStartupProfileInfo:654] - No active profile set, falling back to 1 default profile: "default"
INFO  24-05-29 21:40:19 [main] [RepositoryConfigurationDelegate-multipleStoresDetected:295] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  24-05-29 21:40:19 [main] [RepositoryConfigurationDelegate-registerRepositoriesIn:143] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-05-29 21:40:20 [main] [RepositoryConfigurationDelegate-registerRepositoriesIn:211] - Finished Spring Data repository scanning in 167 ms. Found 22 JPA repository interfaces.
INFO  24-05-29 21:40:20 [main] [RepositoryConfigurationDelegate-multipleStoresDetected:295] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  24-05-29 21:40:20 [main] [RepositoryConfigurationDelegate-registerRepositoriesIn:143] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  24-05-29 21:40:20 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.AvailableTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 21:40:20 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.BookmarkRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 21:40:20 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 21:40:20 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.FacilityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 21:40:20 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.InformRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 21:40:20 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 21:40:20 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.MenuRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 21:40:20 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.MyDiningRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 21:40:20 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 21:40:20 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.PermissionManageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 21:40:20 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.PointManageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 21:40:20 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.RefreshRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 21:40:20 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.ReplyManageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 21:40:20 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.ReplyRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 21:40:20 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.ReservationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 21:40:20 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.ReserveRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 21:40:20 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.RestaurantListRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 21:40:20 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.RestaurantManageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 21:40:20 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.RestaurantRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 21:40:20 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.ReviewManageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 21:40:20 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.ReviewRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 21:40:20 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.UserManageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 21:40:20 [main] [RepositoryConfigurationDelegate-registerRepositoriesIn:211] - Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
WARN  24-05-29 21:40:20 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 21:40:20 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 21:40:20 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 21:40:20 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'jdbcConnectionDetails' of type [org.springframework.boot.autoconfigure.jdbc.PropertiesJdbcConnectionDetails] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 21:40:20 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'dataSource' of type [com.zaxxer.hikari.HikariDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 21:40:20 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties' of type [org.springframework.boot.autoconfigure.orm.jpa.JpaProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 21:40:20 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties' of type [org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 21:40:20 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 21:40:20 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'hikariPoolDataSourceMetadataProvider' of type [org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration$$Lambda$757/0x000001d58c460648] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 21:40:20 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' of type [org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 21:40:20 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 21:40:20 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'transactionExecutionListeners' of type [org.springframework.boot.autoconfigure.transaction.ExecutionListenersTransactionManagerCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 21:40:20 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 21:40:20 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 21:40:20 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration' of type [org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 21:40:20 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties' of type [org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 21:40:20 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'dataSourceScriptDatabaseInitializer' of type [org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 21:40:20 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'org.springframework.boot.autoconfigure.batch.BatchAutoConfiguration$DataSourceInitializerConfiguration' of type [org.springframework.boot.autoconfigure.batch.BatchAutoConfiguration$DataSourceInitializerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 21:40:20 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'spring.batch-org.springframework.boot.autoconfigure.batch.BatchProperties' of type [org.springframework.boot.autoconfigure.batch.BatchProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
INFO  24-05-29 21:40:20 [main] [HikariDataSource-getConnection:110] - HikariPool-1 - Starting...
INFO  24-05-29 21:40:20 [main] [HikariPool-checkFailFast:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3f048c86
INFO  24-05-29 21:40:20 [main] [HikariDataSource-getConnection:123] - HikariPool-1 - Start completed.
WARN  24-05-29 21:40:20 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'batchDataSourceInitializer' of type [org.springframework.boot.autoconfigure.batch.BatchDataSourceScriptDatabaseInitializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 21:40:20 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'jpaVendorAdapter' of type [org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 21:40:20 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'entityManagerFactoryBuilder' of type [org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 21:40:20 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'persistenceManagedTypes' of type [org.springframework.orm.jpa.persistenceunit.SimplePersistenceManagedTypes] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
INFO  24-05-29 21:40:20 [main] [LogHelper-logPersistenceUnitInformation:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-05-29 21:40:20 [main] [Version-logVersion:44] - HHH000412: Hibernate ORM core version 6.4.4.Final
INFO  24-05-29 21:40:20 [main] [RegionFactoryInitiator-initiateService:50] - HHH000026: Second-level cache disabled
INFO  24-05-29 21:40:21 [main] [SpringPersistenceUnitInfo-addTransformer:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
WARN  24-05-29 21:40:21 [main] [deprecation-constructDialect:153] - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
INFO  24-05-29 21:40:22 [main] [JtaPlatformInitiator-initiateService:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
INFO  24-05-29 21:40:22 [main] [LocalContainerEntityManagerFactoryBean-buildNativeEntityManagerFactory:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  24-05-29 21:40:22 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'entityManagerFactory' of type [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 21:40:22 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'entityManagerFactory' of type [jdk.proxy2.$Proxy123] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 21:40:22 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'transactionManager' of type [org.springframework.orm.jpa.JpaTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 21:40:22 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:429] - Bean 'org.springframework.boot.autoconfigure.batch.BatchAutoConfiguration$SpringBootBatchConfiguration' of type [org.springframework.boot.autoconfigure.batch.BatchAutoConfiguration$SpringBootBatchConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [jobRegistryBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
INFO  24-05-29 21:40:22 [main] [TomcatWebServer-initialize:109] - Tomcat initialized with port 8000 (http)
INFO  24-05-29 21:40:22 [main] [Http11NioProtocol-log:173] - Initializing ProtocolHandler ["http-nio-0.0.0.0-8000"]
INFO  24-05-29 21:40:22 [main] [StandardService-log:173] - Starting service [Tomcat]
INFO  24-05-29 21:40:22 [main] [StandardEngine-log:173] - Starting Servlet engine: [Apache Tomcat/10.1.20]
INFO  24-05-29 21:40:22 [main] [[/]-log:173] - Initializing Spring embedded WebApplicationContext
INFO  24-05-29 21:40:22 [main] [ServletWebServerApplicationContext-prepareWebApplicationContext:296] - Root WebApplicationContext: initialization completed in 3668 ms
INFO  24-05-29 21:40:23 [main] [QueryEnhancerFactory-<clinit>:49] - Hibernate is in classpath; If applicable, HQL parser will be used.
WARN  24-05-29 21:40:24 [main] [JpaBaseConfiguration$JpaWebConfiguration-openEntityManagerInViewInterceptor:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-05-29 21:40:24 [main] [DefaultSecurityFilterChain-<init>:54] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2c792d36, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1f44c6b6, org.springframework.security.web.context.SecurityContextHolderFilter@3c7b9ee3, org.springframework.security.web.header.HeaderWriterFilter@3de6799f, org.springframework.web.filter.CorsFilter@166a38a8, com.ssg.dsilbackend.jwt.CustomLogoutFilter@dd26ca6, org.springframework.security.web.authentication.logout.LogoutFilter@7bb93e18, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@769229cb, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@7fc998ef, com.ssg.dsilbackend.jwt.JWTFilter@6827f0b7, com.ssg.dsilbackend.jwt.LoginFilter@516ffa73, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@587e0acf, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@b82ce8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1607278e, org.springframework.security.web.session.SessionManagementFilter@67fe131c, org.springframework.security.web.access.ExceptionTranslationFilter@3ecf180, org.springframework.security.web.access.intercept.AuthorizationFilter@7ebd3267]
WARN  24-05-29 21:40:25 [main] [ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration-checkTemplateLocationExists:101] - Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
INFO  24-05-29 21:40:25 [main] [Http11NioProtocol-log:173] - Starting ProtocolHandler ["http-nio-0.0.0.0-8000"]
INFO  24-05-29 21:40:25 [main] [TomcatWebServer-start:241] - Tomcat started on port 8000 (http) with context path ''
INFO  24-05-29 21:40:25 [main] [DsilBackendApplication-logStarted:56] - Started DsilBackendApplication in 6.681 seconds (process running for 7.207)
INFO  24-05-29 21:40:25 [main] [JobLauncherApplicationRunner-run:168] - Running default command line with: []
INFO  24-05-29 21:40:31 [http-nio-0.0.0.0-8000-exec-1] [[/]-log:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  24-05-29 21:40:31 [http-nio-0.0.0.0-8000-exec-1] [DispatcherServlet-initServletBean:532] - Initializing Servlet 'dispatcherServlet'
INFO  24-05-29 21:40:31 [http-nio-0.0.0.0-8000-exec-1] [DispatcherServlet-initServletBean:554] - Completed initialization in 1 ms
INFO  24-05-29 21:40:31 [http-nio-0.0.0.0-8000-exec-1] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5NjcyMTksImV4cCI6MTcxNzA1MzYxOSwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6InludzIzNDFAbmF2ZXIuY29tIn0.An7wdJ2G-K5KMHNrGX4iVCdJvmLC_lULcVsBBrDxgzk
INFO  24-05-29 21:40:31 [http-nio-0.0.0.0-8000-exec-1] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: ynw2341@naver.com
INFO  24-05-29 21:40:35 [http-nio-0.0.0.0-8000-exec-2] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5NjcyMTksImV4cCI6MTcxNzA1MzYxOSwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6InludzIzNDFAbmF2ZXIuY29tIn0.An7wdJ2G-K5KMHNrGX4iVCdJvmLC_lULcVsBBrDxgzk
INFO  24-05-29 21:40:35 [http-nio-0.0.0.0-8000-exec-2] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: ynw2341@naver.com
INFO  24-05-29 21:40:43 [http-nio-0.0.0.0-8000-exec-3] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5NjcyMTksImV4cCI6MTcxNzA1MzYxOSwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6InludzIzNDFAbmF2ZXIuY29tIn0.An7wdJ2G-K5KMHNrGX4iVCdJvmLC_lULcVsBBrDxgzk
INFO  24-05-29 21:40:43 [http-nio-0.0.0.0-8000-exec-3] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: ynw2341@naver.com
INFO  24-05-29 21:40:49 [http-nio-0.0.0.0-8000-exec-4] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5NjcyMTksImV4cCI6MTcxNzA1MzYxOSwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6InludzIzNDFAbmF2ZXIuY29tIn0.An7wdJ2G-K5KMHNrGX4iVCdJvmLC_lULcVsBBrDxgzk
INFO  24-05-29 21:40:49 [http-nio-0.0.0.0-8000-exec-4] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: ynw2341@naver.com
WARN  24-05-29 21:43:27 [http-nio-0.0.0.0-8000-exec-7] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 21:43:27 [http-nio-0.0.0.0-8000-exec-8] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 21:43:28 [http-nio-0.0.0.0-8000-exec-9] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 21:43:28 [http-nio-0.0.0.0-8000-exec-5] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
INFO  24-05-29 21:43:28 [http-nio-0.0.0.0-8000-exec-1] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5NjcyMTksImV4cCI6MTcxNzA1MzYxOSwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6InludzIzNDFAbmF2ZXIuY29tIn0.An7wdJ2G-K5KMHNrGX4iVCdJvmLC_lULcVsBBrDxgzk
INFO  24-05-29 21:43:28 [http-nio-0.0.0.0-8000-exec-1] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: ynw2341@naver.com
INFO  24-05-29 21:43:28 [http-nio-0.0.0.0-8000-exec-1] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@1ed2deb6, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@32ecb4a5]]
INFO  24-05-29 21:43:28 [http-nio-0.0.0.0-8000-exec-1] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 21:43:28 [http-nio-0.0.0.0-8000-exec-1] [TokenController-getCurrentUser:40] - Email: ynw2341@naver.com
INFO  24-05-29 21:43:28 [http-nio-0.0.0.0-8000-exec-1] [TokenController-getCurrentUser:48] - Authorities: USER
WARN  24-05-29 21:43:28 [http-nio-0.0.0.0-8000-exec-2] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
INFO  24-05-29 21:43:28 [http-nio-0.0.0.0-8000-exec-1] [TokenController-getCurrentUser:62] - Members(id=60, point=Point(id=17, accumulatePoint=50100, currentPoint=25200), permission=Permission(id=1, permission=USER), email=ynw2341@naver.com, password=$2a$10$Iwn97SgGzDAnFAV2FN3TPe64abAikMK8QPhKmvO5GDXxqKG1R1Xi6, name=임태환, tel=010-1111-1111, status=true, address=경기, postcode=123-123, registerNumber=null)
INFO  24-05-29 21:43:28 [http-nio-0.0.0.0-8000-exec-3] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5NjcyMTksImV4cCI6MTcxNzA1MzYxOSwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6InludzIzNDFAbmF2ZXIuY29tIn0.An7wdJ2G-K5KMHNrGX4iVCdJvmLC_lULcVsBBrDxgzk
INFO  24-05-29 21:43:28 [http-nio-0.0.0.0-8000-exec-3] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: ynw2341@naver.com
INFO  24-05-29 21:43:28 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@3a535416, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@67581a68]]
INFO  24-05-29 21:43:28 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 21:43:28 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:40] - Email: ynw2341@naver.com
INFO  24-05-29 21:43:28 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 21:43:28 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:62] - Members(id=60, point=Point(id=17, accumulatePoint=50100, currentPoint=25200), permission=Permission(id=1, permission=USER), email=ynw2341@naver.com, password=$2a$10$Iwn97SgGzDAnFAV2FN3TPe64abAikMK8QPhKmvO5GDXxqKG1R1Xi6, name=임태환, tel=010-1111-1111, status=true, address=경기, postcode=123-123, registerNumber=null)
WARN  24-05-29 21:50:24 [http-nio-0.0.0.0-8000-exec-1] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 21:50:24 [http-nio-0.0.0.0-8000-exec-5] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 21:50:25 [http-nio-0.0.0.0-8000-exec-9] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 21:50:25 [http-nio-0.0.0.0-8000-exec-2] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
INFO  24-05-29 21:50:25 [http-nio-0.0.0.0-8000-exec-3] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5ODQ4NDksImV4cCI6MTcxNzA3MTI0OSwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.onM7zWJbBUw4QPkzDzWUnGhpKTRFjOnR21SYqRPvrk0
INFO  24-05-29 21:50:25 [http-nio-0.0.0.0-8000-exec-3] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 21:50:25 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@7a59a5ef, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@6351f40e]]
INFO  24-05-29 21:50:25 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 21:50:25 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:40] - Email: hhh@naver.com
INFO  24-05-29 21:50:25 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:48] - Authorities: USER
WARN  24-05-29 21:50:25 [http-nio-0.0.0.0-8000-exec-4] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
INFO  24-05-29 21:50:25 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:62] - Members(id=63, point=Point(id=20, accumulatePoint=-100, currentPoint=-100), permission=Permission(id=1, permission=USER), email=hhh@naver.com, password=$2a$10$ygLdbYPG9Gkuu38RQv71YOMKX.zXIilcOdWExl.VqYi2RNBrW2UQC, name=정휘제, tel=01065732265, status=true, address=서울시 우리집, postcode=123456, registerNumber=)
INFO  24-05-29 21:50:25 [http-nio-0.0.0.0-8000-exec-6] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5ODQ4NDksImV4cCI6MTcxNzA3MTI0OSwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.onM7zWJbBUw4QPkzDzWUnGhpKTRFjOnR21SYqRPvrk0
INFO  24-05-29 21:50:25 [http-nio-0.0.0.0-8000-exec-6] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 21:50:25 [http-nio-0.0.0.0-8000-exec-6] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@36808, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@754466d6]]
INFO  24-05-29 21:50:25 [http-nio-0.0.0.0-8000-exec-6] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 21:50:25 [http-nio-0.0.0.0-8000-exec-6] [TokenController-getCurrentUser:40] - Email: hhh@naver.com
INFO  24-05-29 21:50:25 [http-nio-0.0.0.0-8000-exec-6] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 21:50:25 [http-nio-0.0.0.0-8000-exec-6] [TokenController-getCurrentUser:62] - Members(id=63, point=Point(id=20, accumulatePoint=-100, currentPoint=-100), permission=Permission(id=1, permission=USER), email=hhh@naver.com, password=$2a$10$ygLdbYPG9Gkuu38RQv71YOMKX.zXIilcOdWExl.VqYi2RNBrW2UQC, name=정휘제, tel=01065732265, status=true, address=서울시 우리집, postcode=123456, registerNumber=)
WARN  24-05-29 21:59:18 [http-nio-0.0.0.0-8000-exec-5] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 21:59:18 [http-nio-0.0.0.0-8000-exec-2] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 21:59:18 [http-nio-0.0.0.0-8000-exec-9] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 21:59:18 [http-nio-0.0.0.0-8000-exec-3] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 21:59:19 [http-nio-0.0.0.0-8000-exec-6] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 21:59:19 [http-nio-0.0.0.0-8000-exec-4] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 22:00:03 [http-nio-0.0.0.0-8000-exec-1] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 22:00:03 [http-nio-0.0.0.0-8000-exec-7] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 22:00:04 [http-nio-0.0.0.0-8000-exec-10] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 22:00:04 [http-nio-0.0.0.0-8000-exec-8] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
INFO  24-05-29 22:00:04 [http-nio-0.0.0.0-8000-exec-2] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5ODQ4NDksImV4cCI6MTcxNzA3MTI0OSwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.onM7zWJbBUw4QPkzDzWUnGhpKTRFjOnR21SYqRPvrk0
INFO  24-05-29 22:00:04 [http-nio-0.0.0.0-8000-exec-2] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 22:00:04 [http-nio-0.0.0.0-8000-exec-2] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@58848ebe, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@1dc88783]]
INFO  24-05-29 22:00:04 [http-nio-0.0.0.0-8000-exec-2] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 22:00:04 [http-nio-0.0.0.0-8000-exec-2] [TokenController-getCurrentUser:40] - Email: hhh@naver.com
INFO  24-05-29 22:00:04 [http-nio-0.0.0.0-8000-exec-2] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 22:00:04 [http-nio-0.0.0.0-8000-exec-2] [TokenController-getCurrentUser:62] - Members(id=63, point=Point(id=20, accumulatePoint=-100, currentPoint=-100), permission=Permission(id=1, permission=USER), email=hhh@naver.com, password=$2a$10$ygLdbYPG9Gkuu38RQv71YOMKX.zXIilcOdWExl.VqYi2RNBrW2UQC, name=정휘제, tel=01065732265, status=true, address=서울시 우리집, postcode=123456, registerNumber=)
INFO  24-05-29 22:00:04 [http-nio-0.0.0.0-8000-exec-3] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5ODQ4NDksImV4cCI6MTcxNzA3MTI0OSwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.onM7zWJbBUw4QPkzDzWUnGhpKTRFjOnR21SYqRPvrk0
INFO  24-05-29 22:00:04 [http-nio-0.0.0.0-8000-exec-3] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 22:00:04 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@70ed743d, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@298b0aa8]]
INFO  24-05-29 22:00:04 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 22:00:04 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:40] - Email: hhh@naver.com
INFO  24-05-29 22:00:04 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:48] - Authorities: USER
WARN  24-05-29 22:00:04 [http-nio-0.0.0.0-8000-exec-9] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
INFO  24-05-29 22:00:04 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:62] - Members(id=63, point=Point(id=20, accumulatePoint=-100, currentPoint=-100), permission=Permission(id=1, permission=USER), email=hhh@naver.com, password=$2a$10$ygLdbYPG9Gkuu38RQv71YOMKX.zXIilcOdWExl.VqYi2RNBrW2UQC, name=정휘제, tel=01065732265, status=true, address=서울시 우리집, postcode=123456, registerNumber=)
INFO  24-05-29 22:00:04 [http-nio-0.0.0.0-8000-exec-5] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5ODQ4NDksImV4cCI6MTcxNzA3MTI0OSwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.onM7zWJbBUw4QPkzDzWUnGhpKTRFjOnR21SYqRPvrk0
INFO  24-05-29 22:00:04 [http-nio-0.0.0.0-8000-exec-5] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 22:00:04 [http-nio-0.0.0.0-8000-exec-5] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@a3631b2, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@6ff15db]]
INFO  24-05-29 22:00:04 [http-nio-0.0.0.0-8000-exec-5] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 22:00:04 [http-nio-0.0.0.0-8000-exec-5] [TokenController-getCurrentUser:40] - Email: hhh@naver.com
INFO  24-05-29 22:00:04 [http-nio-0.0.0.0-8000-exec-5] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 22:00:04 [http-nio-0.0.0.0-8000-exec-5] [TokenController-getCurrentUser:62] - Members(id=63, point=Point(id=20, accumulatePoint=-100, currentPoint=-100), permission=Permission(id=1, permission=USER), email=hhh@naver.com, password=$2a$10$ygLdbYPG9Gkuu38RQv71YOMKX.zXIilcOdWExl.VqYi2RNBrW2UQC, name=정휘제, tel=01065732265, status=true, address=서울시 우리집, postcode=123456, registerNumber=)
WARN  24-05-29 22:00:06 [http-nio-0.0.0.0-8000-exec-4] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 22:03:10 [http-nio-0.0.0.0-8000-exec-8] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 22:03:10 [http-nio-0.0.0.0-8000-exec-3] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
INFO  24-05-29 22:03:10 [http-nio-0.0.0.0-8000-exec-10] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5ODQ4NDksImV4cCI6MTcxNzA3MTI0OSwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.onM7zWJbBUw4QPkzDzWUnGhpKTRFjOnR21SYqRPvrk0
INFO  24-05-29 22:03:10 [http-nio-0.0.0.0-8000-exec-10] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 22:03:10 [http-nio-0.0.0.0-8000-exec-10] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@4512e3ca, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@28ca4714]]
INFO  24-05-29 22:03:10 [http-nio-0.0.0.0-8000-exec-10] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 22:03:10 [http-nio-0.0.0.0-8000-exec-10] [TokenController-getCurrentUser:40] - Email: hhh@naver.com
INFO  24-05-29 22:03:10 [http-nio-0.0.0.0-8000-exec-10] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 22:03:10 [http-nio-0.0.0.0-8000-exec-10] [TokenController-getCurrentUser:62] - Members(id=63, point=Point(id=20, accumulatePoint=-100, currentPoint=-100), permission=Permission(id=1, permission=USER), email=hhh@naver.com, password=$2a$10$ygLdbYPG9Gkuu38RQv71YOMKX.zXIilcOdWExl.VqYi2RNBrW2UQC, name=정휘제, tel=01065732265, status=true, address=서울시 우리집, postcode=123456, registerNumber=)
INFO  24-05-29 22:03:10 [http-nio-0.0.0.0-8000-exec-5] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5ODQ4NDksImV4cCI6MTcxNzA3MTI0OSwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.onM7zWJbBUw4QPkzDzWUnGhpKTRFjOnR21SYqRPvrk0
WARN  24-05-29 22:03:10 [http-nio-0.0.0.0-8000-exec-9] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
INFO  24-05-29 22:03:10 [http-nio-0.0.0.0-8000-exec-5] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 22:03:10 [http-nio-0.0.0.0-8000-exec-5] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@41dc36a1, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@2df54772]]
INFO  24-05-29 22:03:10 [http-nio-0.0.0.0-8000-exec-5] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 22:03:10 [http-nio-0.0.0.0-8000-exec-5] [TokenController-getCurrentUser:40] - Email: hhh@naver.com
INFO  24-05-29 22:03:10 [http-nio-0.0.0.0-8000-exec-5] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 22:03:10 [http-nio-0.0.0.0-8000-exec-5] [TokenController-getCurrentUser:62] - Members(id=63, point=Point(id=20, accumulatePoint=-100, currentPoint=-100), permission=Permission(id=1, permission=USER), email=hhh@naver.com, password=$2a$10$ygLdbYPG9Gkuu38RQv71YOMKX.zXIilcOdWExl.VqYi2RNBrW2UQC, name=정휘제, tel=01065732265, status=true, address=서울시 우리집, postcode=123456, registerNumber=)
WARN  24-05-29 22:03:15 [http-nio-0.0.0.0-8000-exec-4] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 22:03:54 [http-nio-0.0.0.0-8000-exec-2] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 22:03:56 [http-nio-0.0.0.0-8000-exec-1] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 22:05:11 [http-nio-0.0.0.0-8000-exec-10] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 22:05:11 [http-nio-0.0.0.0-8000-exec-6] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
INFO  24-05-29 22:05:11 [http-nio-0.0.0.0-8000-exec-3] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5ODQ4NDksImV4cCI6MTcxNzA3MTI0OSwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.onM7zWJbBUw4QPkzDzWUnGhpKTRFjOnR21SYqRPvrk0
INFO  24-05-29 22:05:11 [http-nio-0.0.0.0-8000-exec-3] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 22:05:11 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@4095d08c, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@e650786]]
INFO  24-05-29 22:05:11 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 22:05:11 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:40] - Email: hhh@naver.com
INFO  24-05-29 22:05:11 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 22:05:11 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:62] - Members(id=63, point=Point(id=20, accumulatePoint=-100, currentPoint=-100), permission=Permission(id=1, permission=USER), email=hhh@naver.com, password=$2a$10$ygLdbYPG9Gkuu38RQv71YOMKX.zXIilcOdWExl.VqYi2RNBrW2UQC, name=정휘제, tel=01065732265, status=true, address=서울시 우리집, postcode=123456, registerNumber=)
INFO  24-05-29 22:05:11 [http-nio-0.0.0.0-8000-exec-8] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5ODQ4NDksImV4cCI6MTcxNzA3MTI0OSwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.onM7zWJbBUw4QPkzDzWUnGhpKTRFjOnR21SYqRPvrk0
INFO  24-05-29 22:05:11 [http-nio-0.0.0.0-8000-exec-8] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 22:05:11 [http-nio-0.0.0.0-8000-exec-8] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@279744af, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@b455eb8]]
INFO  24-05-29 22:05:11 [http-nio-0.0.0.0-8000-exec-8] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 22:05:11 [http-nio-0.0.0.0-8000-exec-8] [TokenController-getCurrentUser:40] - Email: hhh@naver.com
INFO  24-05-29 22:05:11 [http-nio-0.0.0.0-8000-exec-8] [TokenController-getCurrentUser:48] - Authorities: USER
WARN  24-05-29 22:05:11 [http-nio-0.0.0.0-8000-exec-5] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
INFO  24-05-29 22:05:11 [http-nio-0.0.0.0-8000-exec-8] [TokenController-getCurrentUser:62] - Members(id=63, point=Point(id=20, accumulatePoint=-100, currentPoint=-100), permission=Permission(id=1, permission=USER), email=hhh@naver.com, password=$2a$10$ygLdbYPG9Gkuu38RQv71YOMKX.zXIilcOdWExl.VqYi2RNBrW2UQC, name=정휘제, tel=01065732265, status=true, address=서울시 우리집, postcode=123456, registerNumber=)
WARN  24-05-29 22:05:13 [http-nio-0.0.0.0-8000-exec-9] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 22:05:16 [http-nio-0.0.0.0-8000-exec-4] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 22:05:17 [http-nio-0.0.0.0-8000-exec-2] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 22:07:06 [http-nio-0.0.0.0-8000-exec-3] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 22:07:06 [http-nio-0.0.0.0-8000-exec-10] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
INFO  24-05-29 22:07:06 [http-nio-0.0.0.0-8000-exec-6] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5ODQ4NDksImV4cCI6MTcxNzA3MTI0OSwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.onM7zWJbBUw4QPkzDzWUnGhpKTRFjOnR21SYqRPvrk0
INFO  24-05-29 22:07:06 [http-nio-0.0.0.0-8000-exec-6] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 22:07:06 [http-nio-0.0.0.0-8000-exec-6] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@5e64b84a, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@227bbea1]]
INFO  24-05-29 22:07:06 [http-nio-0.0.0.0-8000-exec-6] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 22:07:06 [http-nio-0.0.0.0-8000-exec-6] [TokenController-getCurrentUser:40] - Email: hhh@naver.com
INFO  24-05-29 22:07:06 [http-nio-0.0.0.0-8000-exec-6] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 22:07:06 [http-nio-0.0.0.0-8000-exec-6] [TokenController-getCurrentUser:62] - Members(id=63, point=Point(id=20, accumulatePoint=-100, currentPoint=-100), permission=Permission(id=1, permission=USER), email=hhh@naver.com, password=$2a$10$ygLdbYPG9Gkuu38RQv71YOMKX.zXIilcOdWExl.VqYi2RNBrW2UQC, name=정휘제, tel=01065732265, status=true, address=서울시 우리집, postcode=123456, registerNumber=)
INFO  24-05-29 22:07:06 [http-nio-0.0.0.0-8000-exec-8] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5ODQ4NDksImV4cCI6MTcxNzA3MTI0OSwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.onM7zWJbBUw4QPkzDzWUnGhpKTRFjOnR21SYqRPvrk0
INFO  24-05-29 22:07:06 [http-nio-0.0.0.0-8000-exec-8] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 22:07:06 [http-nio-0.0.0.0-8000-exec-8] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@2020eae9, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@4fa8b259]]
INFO  24-05-29 22:07:06 [http-nio-0.0.0.0-8000-exec-8] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 22:07:06 [http-nio-0.0.0.0-8000-exec-8] [TokenController-getCurrentUser:40] - Email: hhh@naver.com
INFO  24-05-29 22:07:06 [http-nio-0.0.0.0-8000-exec-8] [TokenController-getCurrentUser:48] - Authorities: USER
WARN  24-05-29 22:07:06 [http-nio-0.0.0.0-8000-exec-5] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
INFO  24-05-29 22:07:06 [http-nio-0.0.0.0-8000-exec-8] [TokenController-getCurrentUser:62] - Members(id=63, point=Point(id=20, accumulatePoint=-100, currentPoint=-100), permission=Permission(id=1, permission=USER), email=hhh@naver.com, password=$2a$10$ygLdbYPG9Gkuu38RQv71YOMKX.zXIilcOdWExl.VqYi2RNBrW2UQC, name=정휘제, tel=01065732265, status=true, address=서울시 우리집, postcode=123456, registerNumber=)
WARN  24-05-29 22:09:54 [http-nio-0.0.0.0-8000-exec-1] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 22:09:54 [http-nio-0.0.0.0-8000-exec-6] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
INFO  24-05-29 22:09:54 [http-nio-0.0.0.0-8000-exec-10] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5ODQ4NDksImV4cCI6MTcxNzA3MTI0OSwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.onM7zWJbBUw4QPkzDzWUnGhpKTRFjOnR21SYqRPvrk0
INFO  24-05-29 22:09:54 [http-nio-0.0.0.0-8000-exec-10] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 22:09:54 [http-nio-0.0.0.0-8000-exec-10] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@30120e0, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@35ac0ec8]]
INFO  24-05-29 22:09:54 [http-nio-0.0.0.0-8000-exec-10] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 22:09:54 [http-nio-0.0.0.0-8000-exec-10] [TokenController-getCurrentUser:40] - Email: hhh@naver.com
INFO  24-05-29 22:09:54 [http-nio-0.0.0.0-8000-exec-10] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 22:09:54 [http-nio-0.0.0.0-8000-exec-10] [TokenController-getCurrentUser:62] - Members(id=63, point=Point(id=20, accumulatePoint=-100, currentPoint=-100), permission=Permission(id=1, permission=USER), email=hhh@naver.com, password=$2a$10$ygLdbYPG9Gkuu38RQv71YOMKX.zXIilcOdWExl.VqYi2RNBrW2UQC, name=정휘제, tel=01065732265, status=true, address=서울시 우리집, postcode=123456, registerNumber=)
INFO  24-05-29 22:09:54 [http-nio-0.0.0.0-8000-exec-3] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5ODQ4NDksImV4cCI6MTcxNzA3MTI0OSwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.onM7zWJbBUw4QPkzDzWUnGhpKTRFjOnR21SYqRPvrk0
INFO  24-05-29 22:09:54 [http-nio-0.0.0.0-8000-exec-3] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 22:09:54 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@1baaa579, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@2a4f6795]]
INFO  24-05-29 22:09:54 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 22:09:54 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:40] - Email: hhh@naver.com
INFO  24-05-29 22:09:54 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:48] - Authorities: USER
WARN  24-05-29 22:09:54 [http-nio-0.0.0.0-8000-exec-8] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
INFO  24-05-29 22:09:54 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:62] - Members(id=63, point=Point(id=20, accumulatePoint=-100, currentPoint=-100), permission=Permission(id=1, permission=USER), email=hhh@naver.com, password=$2a$10$ygLdbYPG9Gkuu38RQv71YOMKX.zXIilcOdWExl.VqYi2RNBrW2UQC, name=정휘제, tel=01065732265, status=true, address=서울시 우리집, postcode=123456, registerNumber=)
WARN  24-05-29 22:10:04 [http-nio-0.0.0.0-8000-exec-10] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 22:13:45 [http-nio-0.0.0.0-8000-exec-6] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 22:13:45 [http-nio-0.0.0.0-8000-exec-3] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
INFO  24-05-29 22:13:45 [http-nio-0.0.0.0-8000-exec-1] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5ODQ4NDksImV4cCI6MTcxNzA3MTI0OSwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.onM7zWJbBUw4QPkzDzWUnGhpKTRFjOnR21SYqRPvrk0
INFO  24-05-29 22:13:45 [http-nio-0.0.0.0-8000-exec-1] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 22:13:45 [http-nio-0.0.0.0-8000-exec-1] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@e59a908, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@1a17259c]]
INFO  24-05-29 22:13:45 [http-nio-0.0.0.0-8000-exec-1] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 22:13:45 [http-nio-0.0.0.0-8000-exec-1] [TokenController-getCurrentUser:40] - Email: hhh@naver.com
INFO  24-05-29 22:13:45 [http-nio-0.0.0.0-8000-exec-1] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 22:13:45 [http-nio-0.0.0.0-8000-exec-1] [TokenController-getCurrentUser:62] - Members(id=63, point=Point(id=20, accumulatePoint=-100, currentPoint=-100), permission=Permission(id=1, permission=USER), email=hhh@naver.com, password=$2a$10$ygLdbYPG9Gkuu38RQv71YOMKX.zXIilcOdWExl.VqYi2RNBrW2UQC, name=정휘제, tel=01065732265, status=true, address=서울시 우리집, postcode=123456, registerNumber=)
WARN  24-05-29 22:13:45 [http-nio-0.0.0.0-8000-exec-8] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
INFO  24-05-29 22:13:45 [http-nio-0.0.0.0-8000-exec-9] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5ODQ4NDksImV4cCI6MTcxNzA3MTI0OSwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.onM7zWJbBUw4QPkzDzWUnGhpKTRFjOnR21SYqRPvrk0
INFO  24-05-29 22:13:45 [http-nio-0.0.0.0-8000-exec-9] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 22:13:45 [http-nio-0.0.0.0-8000-exec-9] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@4e81ff, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@7a932f55]]
INFO  24-05-29 22:13:45 [http-nio-0.0.0.0-8000-exec-9] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 22:13:45 [http-nio-0.0.0.0-8000-exec-9] [TokenController-getCurrentUser:40] - Email: hhh@naver.com
INFO  24-05-29 22:13:45 [http-nio-0.0.0.0-8000-exec-9] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 22:13:45 [http-nio-0.0.0.0-8000-exec-9] [TokenController-getCurrentUser:62] - Members(id=63, point=Point(id=20, accumulatePoint=-100, currentPoint=-100), permission=Permission(id=1, permission=USER), email=hhh@naver.com, password=$2a$10$ygLdbYPG9Gkuu38RQv71YOMKX.zXIilcOdWExl.VqYi2RNBrW2UQC, name=정휘제, tel=01065732265, status=true, address=서울시 우리집, postcode=123456, registerNumber=)
INFO  24-05-29 22:15:54 [SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean-destroy:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  24-05-29 22:15:54 [SpringApplicationShutdownHook] [HikariDataSource-close:350] - HikariPool-1 - Shutdown initiated...
INFO  24-05-29 22:15:54 [SpringApplicationShutdownHook] [HikariDataSource-close:352] - HikariPool-1 - Shutdown completed.
INFO  24-05-29 22:22:02 [main] [DsilBackendApplication-logStarting:50] - Starting DsilBackendApplication using Java 17.0.11 with PID 158492 (C:\finalproject\DSILbackend\target\classes started by 문상현 in C:\finalproject\DSILbackend)
INFO  24-05-29 22:22:02 [main] [DsilBackendApplication-logStartupProfileInfo:654] - No active profile set, falling back to 1 default profile: "default"
INFO  24-05-29 22:22:03 [main] [RepositoryConfigurationDelegate-multipleStoresDetected:295] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  24-05-29 22:22:03 [main] [RepositoryConfigurationDelegate-registerRepositoriesIn:143] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-05-29 22:22:04 [main] [RepositoryConfigurationDelegate-registerRepositoriesIn:211] - Finished Spring Data repository scanning in 231 ms. Found 22 JPA repository interfaces.
INFO  24-05-29 22:22:04 [main] [RepositoryConfigurationDelegate-multipleStoresDetected:295] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  24-05-29 22:22:04 [main] [RepositoryConfigurationDelegate-registerRepositoriesIn:143] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  24-05-29 22:22:04 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.AvailableTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:22:04 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.BookmarkRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:22:04 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:22:04 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.FacilityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:22:04 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.InformRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:22:04 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:22:04 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.MenuRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:22:04 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.MyDiningRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:22:04 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:22:04 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.PermissionManageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:22:04 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.PointManageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:22:04 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.RefreshRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:22:04 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.ReplyManageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:22:04 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.ReplyRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:22:04 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.ReservationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:22:04 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.ReserveRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:22:04 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.RestaurantListRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:22:04 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.RestaurantManageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:22:04 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.RestaurantRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:22:04 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.ReviewManageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:22:04 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.ReviewRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:22:04 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.UserManageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:22:04 [main] [RepositoryConfigurationDelegate-registerRepositoriesIn:211] - Finished Spring Data repository scanning in 14 ms. Found 0 Redis repository interfaces.
WARN  24-05-29 22:22:04 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:22:04 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:22:04 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:22:04 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'jdbcConnectionDetails' of type [org.springframework.boot.autoconfigure.jdbc.PropertiesJdbcConnectionDetails] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:22:04 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'dataSource' of type [com.zaxxer.hikari.HikariDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:22:04 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties' of type [org.springframework.boot.autoconfigure.orm.jpa.JpaProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:22:04 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties' of type [org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:22:04 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:22:04 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'hikariPoolDataSourceMetadataProvider' of type [org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration$$Lambda$757/0x000002d646466000] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:22:04 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' of type [org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:22:04 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:22:04 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'transactionExecutionListeners' of type [org.springframework.boot.autoconfigure.transaction.ExecutionListenersTransactionManagerCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:22:04 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:22:04 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:22:04 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration' of type [org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:22:04 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties' of type [org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:22:04 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'dataSourceScriptDatabaseInitializer' of type [org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:22:04 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'org.springframework.boot.autoconfigure.batch.BatchAutoConfiguration$DataSourceInitializerConfiguration' of type [org.springframework.boot.autoconfigure.batch.BatchAutoConfiguration$DataSourceInitializerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:22:04 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'spring.batch-org.springframework.boot.autoconfigure.batch.BatchProperties' of type [org.springframework.boot.autoconfigure.batch.BatchProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
INFO  24-05-29 22:22:04 [main] [HikariDataSource-getConnection:110] - HikariPool-1 - Starting...
INFO  24-05-29 22:22:05 [main] [HikariPool-checkFailFast:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@226d5af0
INFO  24-05-29 22:22:05 [main] [HikariDataSource-getConnection:123] - HikariPool-1 - Start completed.
WARN  24-05-29 22:22:05 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'batchDataSourceInitializer' of type [org.springframework.boot.autoconfigure.batch.BatchDataSourceScriptDatabaseInitializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:22:05 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'jpaVendorAdapter' of type [org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:22:05 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'entityManagerFactoryBuilder' of type [org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:22:05 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'persistenceManagedTypes' of type [org.springframework.orm.jpa.persistenceunit.SimplePersistenceManagedTypes] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
INFO  24-05-29 22:22:05 [main] [LogHelper-logPersistenceUnitInformation:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-05-29 22:22:05 [main] [Version-logVersion:44] - HHH000412: Hibernate ORM core version 6.4.4.Final
INFO  24-05-29 22:22:05 [main] [RegionFactoryInitiator-initiateService:50] - HHH000026: Second-level cache disabled
INFO  24-05-29 22:22:05 [main] [SpringPersistenceUnitInfo-addTransformer:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
WARN  24-05-29 22:22:05 [main] [deprecation-constructDialect:153] - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
INFO  24-05-29 22:22:06 [main] [JtaPlatformInitiator-initiateService:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
INFO  24-05-29 22:22:06 [main] [LocalContainerEntityManagerFactoryBean-buildNativeEntityManagerFactory:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  24-05-29 22:22:06 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'entityManagerFactory' of type [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:22:06 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'entityManagerFactory' of type [jdk.proxy2.$Proxy123] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:22:06 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'transactionManager' of type [org.springframework.orm.jpa.JpaTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:22:06 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:429] - Bean 'org.springframework.boot.autoconfigure.batch.BatchAutoConfiguration$SpringBootBatchConfiguration' of type [org.springframework.boot.autoconfigure.batch.BatchAutoConfiguration$SpringBootBatchConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [jobRegistryBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
INFO  24-05-29 22:22:07 [main] [TomcatWebServer-initialize:109] - Tomcat initialized with port 8000 (http)
INFO  24-05-29 22:22:07 [main] [Http11NioProtocol-log:173] - Initializing ProtocolHandler ["http-nio-0.0.0.0-8000"]
INFO  24-05-29 22:22:07 [main] [StandardService-log:173] - Starting service [Tomcat]
INFO  24-05-29 22:22:07 [main] [StandardEngine-log:173] - Starting Servlet engine: [Apache Tomcat/10.1.20]
INFO  24-05-29 22:22:07 [main] [[/]-log:173] - Initializing Spring embedded WebApplicationContext
INFO  24-05-29 22:22:07 [main] [ServletWebServerApplicationContext-prepareWebApplicationContext:296] - Root WebApplicationContext: initialization completed in 4272 ms
INFO  24-05-29 22:22:07 [main] [QueryEnhancerFactory-<clinit>:49] - Hibernate is in classpath; If applicable, HQL parser will be used.
WARN  24-05-29 22:22:09 [main] [JpaBaseConfiguration$JpaWebConfiguration-openEntityManagerInViewInterceptor:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-05-29 22:22:09 [main] [DefaultSecurityFilterChain-<init>:54] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6a67e945, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@22887352, org.springframework.security.web.context.SecurityContextHolderFilter@3de6799f, org.springframework.security.web.header.HeaderWriterFilter@780d5822, org.springframework.web.filter.CorsFilter@7fc998ef, com.ssg.dsilbackend.jwt.CustomLogoutFilter@18723aac, org.springframework.security.web.authentication.logout.LogoutFilter@1d39d660, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@147058d0, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@6be4686b, com.ssg.dsilbackend.jwt.JWTFilter@4d0ad526, com.ssg.dsilbackend.jwt.LoginFilter@2c792d36, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@67fe131c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@65e2cca9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1f44c6b6, org.springframework.security.web.session.SessionManagementFilter@3391a67f, org.springframework.security.web.access.ExceptionTranslationFilter@42e11e00, org.springframework.security.web.access.intercept.AuthorizationFilter@30f19549]
WARN  24-05-29 22:22:10 [main] [ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration-checkTemplateLocationExists:101] - Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
INFO  24-05-29 22:22:10 [main] [Http11NioProtocol-log:173] - Starting ProtocolHandler ["http-nio-0.0.0.0-8000"]
INFO  24-05-29 22:22:10 [main] [TomcatWebServer-start:241] - Tomcat started on port 8000 (http) with context path ''
INFO  24-05-29 22:22:10 [main] [DsilBackendApplication-logStarted:56] - Started DsilBackendApplication in 7.982 seconds (process running for 8.744)
INFO  24-05-29 22:22:10 [main] [JobLauncherApplicationRunner-run:168] - Running default command line with: []
INFO  24-05-29 22:22:29 [http-nio-0.0.0.0-8000-exec-4] [[/]-log:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  24-05-29 22:22:29 [http-nio-0.0.0.0-8000-exec-4] [DispatcherServlet-initServletBean:532] - Initializing Servlet 'dispatcherServlet'
INFO  24-05-29 22:22:29 [http-nio-0.0.0.0-8000-exec-4] [DispatcherServlet-initServletBean:554] - Completed initialization in 1 ms
WARN  24-05-29 22:22:29 [http-nio-0.0.0.0-8000-exec-1] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 22:22:29 [http-nio-0.0.0.0-8000-exec-4] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 22:22:30 [http-nio-0.0.0.0-8000-exec-7] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 22:22:30 [http-nio-0.0.0.0-8000-exec-6] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
INFO  24-05-29 22:22:30 [http-nio-0.0.0.0-8000-exec-3] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5NjcyMTksImV4cCI6MTcxNzA1MzYxOSwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6InludzIzNDFAbmF2ZXIuY29tIn0.An7wdJ2G-K5KMHNrGX4iVCdJvmLC_lULcVsBBrDxgzk
WARN  24-05-29 22:22:30 [http-nio-0.0.0.0-8000-exec-2] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
INFO  24-05-29 22:22:30 [http-nio-0.0.0.0-8000-exec-3] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: ynw2341@naver.com
INFO  24-05-29 22:22:30 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@23df8638, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@776de3b7]]
INFO  24-05-29 22:22:30 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 22:22:30 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:40] - Email: ynw2341@naver.com
INFO  24-05-29 22:22:30 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 22:22:30 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:62] - Members(id=60, point=Point(id=17, accumulatePoint=50100, currentPoint=25200), permission=Permission(id=1, permission=USER), email=ynw2341@naver.com, password=$2a$10$Iwn97SgGzDAnFAV2FN3TPe64abAikMK8QPhKmvO5GDXxqKG1R1Xi6, name=임태환, tel=010-1111-1111, status=true, address=경기, postcode=123-123, registerNumber=null)
INFO  24-05-29 22:22:30 [http-nio-0.0.0.0-8000-exec-8] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5NjcyMTksImV4cCI6MTcxNzA1MzYxOSwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6InludzIzNDFAbmF2ZXIuY29tIn0.An7wdJ2G-K5KMHNrGX4iVCdJvmLC_lULcVsBBrDxgzk
INFO  24-05-29 22:22:30 [http-nio-0.0.0.0-8000-exec-8] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: ynw2341@naver.com
INFO  24-05-29 22:22:30 [http-nio-0.0.0.0-8000-exec-8] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@2456922e, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@832d2d4]]
INFO  24-05-29 22:22:30 [http-nio-0.0.0.0-8000-exec-8] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 22:22:30 [http-nio-0.0.0.0-8000-exec-8] [TokenController-getCurrentUser:40] - Email: ynw2341@naver.com
INFO  24-05-29 22:22:30 [http-nio-0.0.0.0-8000-exec-8] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 22:22:30 [http-nio-0.0.0.0-8000-exec-8] [TokenController-getCurrentUser:62] - Members(id=60, point=Point(id=17, accumulatePoint=50100, currentPoint=25200), permission=Permission(id=1, permission=USER), email=ynw2341@naver.com, password=$2a$10$Iwn97SgGzDAnFAV2FN3TPe64abAikMK8QPhKmvO5GDXxqKG1R1Xi6, name=임태환, tel=010-1111-1111, status=true, address=경기, postcode=123-123, registerNumber=null)
INFO  24-05-29 22:22:30 [http-nio-0.0.0.0-8000-exec-9] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5NjcyMTksImV4cCI6MTcxNzA1MzYxOSwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6InludzIzNDFAbmF2ZXIuY29tIn0.An7wdJ2G-K5KMHNrGX4iVCdJvmLC_lULcVsBBrDxgzk
INFO  24-05-29 22:22:30 [http-nio-0.0.0.0-8000-exec-9] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: ynw2341@naver.com
INFO  24-05-29 22:22:30 [http-nio-0.0.0.0-8000-exec-9] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@43aa3fa1, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@296f30ea]]
INFO  24-05-29 22:22:30 [http-nio-0.0.0.0-8000-exec-9] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 22:22:30 [http-nio-0.0.0.0-8000-exec-9] [TokenController-getCurrentUser:40] - Email: ynw2341@naver.com
INFO  24-05-29 22:22:30 [http-nio-0.0.0.0-8000-exec-9] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 22:22:30 [http-nio-0.0.0.0-8000-exec-9] [TokenController-getCurrentUser:62] - Members(id=60, point=Point(id=17, accumulatePoint=50100, currentPoint=25200), permission=Permission(id=1, permission=USER), email=ynw2341@naver.com, password=$2a$10$Iwn97SgGzDAnFAV2FN3TPe64abAikMK8QPhKmvO5GDXxqKG1R1Xi6, name=임태환, tel=010-1111-1111, status=true, address=경기, postcode=123-123, registerNumber=null)
WARN  24-05-29 22:22:37 [http-nio-0.0.0.0-8000-exec-4] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
INFO  24-05-29 22:23:30 [SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean-destroy:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  24-05-29 22:23:30 [SpringApplicationShutdownHook] [HikariDataSource-close:350] - HikariPool-1 - Shutdown initiated...
INFO  24-05-29 22:23:30 [SpringApplicationShutdownHook] [HikariDataSource-close:352] - HikariPool-1 - Shutdown completed.
INFO  24-05-29 22:23:34 [main] [DsilBackendApplication-logStarting:50] - Starting DsilBackendApplication using Java 17.0.11 with PID 159740 (C:\finalproject\DSILbackend\target\classes started by 문상현 in C:\finalproject\DSILbackend)
INFO  24-05-29 22:23:34 [main] [DsilBackendApplication-logStartupProfileInfo:654] - No active profile set, falling back to 1 default profile: "default"
INFO  24-05-29 22:23:35 [main] [RepositoryConfigurationDelegate-multipleStoresDetected:295] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  24-05-29 22:23:35 [main] [RepositoryConfigurationDelegate-registerRepositoriesIn:143] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-05-29 22:23:35 [main] [RepositoryConfigurationDelegate-registerRepositoriesIn:211] - Finished Spring Data repository scanning in 169 ms. Found 22 JPA repository interfaces.
INFO  24-05-29 22:23:35 [main] [RepositoryConfigurationDelegate-multipleStoresDetected:295] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  24-05-29 22:23:35 [main] [RepositoryConfigurationDelegate-registerRepositoriesIn:143] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  24-05-29 22:23:35 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.AvailableTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:23:35 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.BookmarkRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:23:35 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:23:35 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.FacilityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:23:35 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.InformRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:23:35 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:23:35 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.MenuRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:23:35 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.MyDiningRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:23:35 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:23:35 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.PermissionManageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:23:35 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.PointManageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:23:35 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.RefreshRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:23:35 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.ReplyManageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:23:35 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.ReplyRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:23:35 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.ReservationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:23:35 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.ReserveRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:23:35 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.RestaurantListRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:23:35 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.RestaurantManageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:23:35 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.RestaurantRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:23:35 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.ReviewManageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:23:35 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.ReviewRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:23:35 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.UserManageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:23:35 [main] [RepositoryConfigurationDelegate-registerRepositoriesIn:211] - Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
WARN  24-05-29 22:23:36 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:23:36 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:23:36 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:23:36 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'jdbcConnectionDetails' of type [org.springframework.boot.autoconfigure.jdbc.PropertiesJdbcConnectionDetails] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:23:36 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'dataSource' of type [com.zaxxer.hikari.HikariDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:23:36 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties' of type [org.springframework.boot.autoconfigure.orm.jpa.JpaProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:23:36 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties' of type [org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:23:36 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:23:36 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'hikariPoolDataSourceMetadataProvider' of type [org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration$$Lambda$757/0x0000023b01464648] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:23:36 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' of type [org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:23:36 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:23:36 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'transactionExecutionListeners' of type [org.springframework.boot.autoconfigure.transaction.ExecutionListenersTransactionManagerCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:23:36 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:23:36 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:23:36 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration' of type [org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:23:36 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties' of type [org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:23:36 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'dataSourceScriptDatabaseInitializer' of type [org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:23:36 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'org.springframework.boot.autoconfigure.batch.BatchAutoConfiguration$DataSourceInitializerConfiguration' of type [org.springframework.boot.autoconfigure.batch.BatchAutoConfiguration$DataSourceInitializerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:23:36 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'spring.batch-org.springframework.boot.autoconfigure.batch.BatchProperties' of type [org.springframework.boot.autoconfigure.batch.BatchProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
INFO  24-05-29 22:23:36 [main] [HikariDataSource-getConnection:110] - HikariPool-1 - Starting...
INFO  24-05-29 22:23:36 [main] [HikariPool-checkFailFast:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@24d8f87a
INFO  24-05-29 22:23:36 [main] [HikariDataSource-getConnection:123] - HikariPool-1 - Start completed.
WARN  24-05-29 22:23:36 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'batchDataSourceInitializer' of type [org.springframework.boot.autoconfigure.batch.BatchDataSourceScriptDatabaseInitializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:23:36 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'jpaVendorAdapter' of type [org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:23:36 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'entityManagerFactoryBuilder' of type [org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:23:36 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'persistenceManagedTypes' of type [org.springframework.orm.jpa.persistenceunit.SimplePersistenceManagedTypes] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
INFO  24-05-29 22:23:36 [main] [LogHelper-logPersistenceUnitInformation:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-05-29 22:23:36 [main] [Version-logVersion:44] - HHH000412: Hibernate ORM core version 6.4.4.Final
INFO  24-05-29 22:23:36 [main] [RegionFactoryInitiator-initiateService:50] - HHH000026: Second-level cache disabled
INFO  24-05-29 22:23:37 [main] [SpringPersistenceUnitInfo-addTransformer:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
WARN  24-05-29 22:23:37 [main] [deprecation-constructDialect:153] - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
INFO  24-05-29 22:23:38 [main] [JtaPlatformInitiator-initiateService:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
INFO  24-05-29 22:23:38 [main] [LocalContainerEntityManagerFactoryBean-buildNativeEntityManagerFactory:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  24-05-29 22:23:38 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'entityManagerFactory' of type [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:23:38 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'entityManagerFactory' of type [jdk.proxy2.$Proxy123] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:23:38 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'transactionManager' of type [org.springframework.orm.jpa.JpaTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:23:38 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:429] - Bean 'org.springframework.boot.autoconfigure.batch.BatchAutoConfiguration$SpringBootBatchConfiguration' of type [org.springframework.boot.autoconfigure.batch.BatchAutoConfiguration$SpringBootBatchConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [jobRegistryBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
INFO  24-05-29 22:23:38 [main] [TomcatWebServer-initialize:109] - Tomcat initialized with port 8000 (http)
INFO  24-05-29 22:23:38 [main] [Http11NioProtocol-log:173] - Initializing ProtocolHandler ["http-nio-0.0.0.0-8000"]
INFO  24-05-29 22:23:38 [main] [StandardService-log:173] - Starting service [Tomcat]
INFO  24-05-29 22:23:38 [main] [StandardEngine-log:173] - Starting Servlet engine: [Apache Tomcat/10.1.20]
INFO  24-05-29 22:23:38 [main] [[/]-log:173] - Initializing Spring embedded WebApplicationContext
INFO  24-05-29 22:23:38 [main] [ServletWebServerApplicationContext-prepareWebApplicationContext:296] - Root WebApplicationContext: initialization completed in 3476 ms
INFO  24-05-29 22:23:38 [main] [QueryEnhancerFactory-<clinit>:49] - Hibernate is in classpath; If applicable, HQL parser will be used.
WARN  24-05-29 22:23:40 [main] [JpaBaseConfiguration$JpaWebConfiguration-openEntityManagerInViewInterceptor:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-05-29 22:23:40 [main] [DefaultSecurityFilterChain-<init>:54] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4d0ad526, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2c792d36, org.springframework.security.web.context.SecurityContextHolderFilter@6bc67b0b, org.springframework.security.web.header.HeaderWriterFilter@11326597, org.springframework.web.filter.CorsFilter@1f44c6b6, com.ssg.dsilbackend.jwt.CustomLogoutFilter@166a38a8, org.springframework.security.web.authentication.logout.LogoutFilter@2858d3d9, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@7d440b1f, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@22887352, com.ssg.dsilbackend.jwt.JWTFilter@dd26ca6, com.ssg.dsilbackend.jwt.LoginFilter@6827f0b7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2b0a0c83, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@587e0acf, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@516ffa73, org.springframework.security.web.session.SessionManagementFilter@37a8202, org.springframework.security.web.access.ExceptionTranslationFilter@3391a67f, org.springframework.security.web.access.intercept.AuthorizationFilter@71ad18e6]
WARN  24-05-29 22:23:40 [main] [ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration-checkTemplateLocationExists:101] - Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
INFO  24-05-29 22:23:40 [main] [Http11NioProtocol-log:173] - Starting ProtocolHandler ["http-nio-0.0.0.0-8000"]
INFO  24-05-29 22:23:40 [main] [TomcatWebServer-start:241] - Tomcat started on port 8000 (http) with context path ''
INFO  24-05-29 22:23:40 [main] [DsilBackendApplication-logStarted:56] - Started DsilBackendApplication in 6.485 seconds (process running for 7.083)
INFO  24-05-29 22:23:40 [main] [JobLauncherApplicationRunner-run:168] - Running default command line with: []
INFO  24-05-29 22:23:43 [http-nio-0.0.0.0-8000-exec-1] [[/]-log:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  24-05-29 22:23:43 [http-nio-0.0.0.0-8000-exec-1] [DispatcherServlet-initServletBean:532] - Initializing Servlet 'dispatcherServlet'
INFO  24-05-29 22:23:43 [http-nio-0.0.0.0-8000-exec-1] [DispatcherServlet-initServletBean:554] - Completed initialization in 2 ms
WARN  24-05-29 22:23:43 [http-nio-0.0.0.0-8000-exec-1] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 22:23:45 [http-nio-0.0.0.0-8000-exec-4] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 22:24:26 [http-nio-0.0.0.0-8000-exec-8] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 22:27:07 [http-nio-0.0.0.0-8000-exec-7] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 22:27:07 [http-nio-0.0.0.0-8000-exec-6] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 22:27:08 [http-nio-0.0.0.0-8000-exec-2] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 22:27:08 [http-nio-0.0.0.0-8000-exec-9] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
INFO  24-05-29 22:27:08 [http-nio-0.0.0.0-8000-exec-5] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5NjcyMTksImV4cCI6MTcxNzA1MzYxOSwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6InludzIzNDFAbmF2ZXIuY29tIn0.An7wdJ2G-K5KMHNrGX4iVCdJvmLC_lULcVsBBrDxgzk
WARN  24-05-29 22:27:08 [http-nio-0.0.0.0-8000-exec-1] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
INFO  24-05-29 22:27:08 [http-nio-0.0.0.0-8000-exec-5] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: ynw2341@naver.com
INFO  24-05-29 22:27:08 [http-nio-0.0.0.0-8000-exec-5] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@6c51e43a, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@1bfa1e15]]
INFO  24-05-29 22:27:08 [http-nio-0.0.0.0-8000-exec-5] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 22:27:08 [http-nio-0.0.0.0-8000-exec-5] [TokenController-getCurrentUser:40] - Email: ynw2341@naver.com
INFO  24-05-29 22:27:08 [http-nio-0.0.0.0-8000-exec-5] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 22:27:08 [http-nio-0.0.0.0-8000-exec-5] [TokenController-getCurrentUser:62] - Members(id=60, point=Point(id=17, accumulatePoint=50100, currentPoint=25200), permission=Permission(id=1, permission=USER), email=ynw2341@naver.com, password=$2a$10$Iwn97SgGzDAnFAV2FN3TPe64abAikMK8QPhKmvO5GDXxqKG1R1Xi6, name=임태환, tel=010-1111-1111, status=true, address=경기, postcode=123-123, registerNumber=null)
INFO  24-05-29 22:27:08 [http-nio-0.0.0.0-8000-exec-4] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5NjcyMTksImV4cCI6MTcxNzA1MzYxOSwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6InludzIzNDFAbmF2ZXIuY29tIn0.An7wdJ2G-K5KMHNrGX4iVCdJvmLC_lULcVsBBrDxgzk
INFO  24-05-29 22:27:08 [http-nio-0.0.0.0-8000-exec-4] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: ynw2341@naver.com
INFO  24-05-29 22:27:08 [http-nio-0.0.0.0-8000-exec-4] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@6578b45d, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@1ccd0033]]
INFO  24-05-29 22:27:08 [http-nio-0.0.0.0-8000-exec-4] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 22:27:08 [http-nio-0.0.0.0-8000-exec-4] [TokenController-getCurrentUser:40] - Email: ynw2341@naver.com
INFO  24-05-29 22:27:08 [http-nio-0.0.0.0-8000-exec-4] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 22:27:08 [http-nio-0.0.0.0-8000-exec-4] [TokenController-getCurrentUser:62] - Members(id=60, point=Point(id=17, accumulatePoint=50100, currentPoint=25200), permission=Permission(id=1, permission=USER), email=ynw2341@naver.com, password=$2a$10$Iwn97SgGzDAnFAV2FN3TPe64abAikMK8QPhKmvO5GDXxqKG1R1Xi6, name=임태환, tel=010-1111-1111, status=true, address=경기, postcode=123-123, registerNumber=null)
INFO  24-05-29 22:27:08 [http-nio-0.0.0.0-8000-exec-3] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5NjcyMTksImV4cCI6MTcxNzA1MzYxOSwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6InludzIzNDFAbmF2ZXIuY29tIn0.An7wdJ2G-K5KMHNrGX4iVCdJvmLC_lULcVsBBrDxgzk
INFO  24-05-29 22:27:08 [http-nio-0.0.0.0-8000-exec-3] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: ynw2341@naver.com
INFO  24-05-29 22:27:08 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@66dd4585, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@1e4babf7]]
INFO  24-05-29 22:27:08 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 22:27:08 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:40] - Email: ynw2341@naver.com
INFO  24-05-29 22:27:08 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 22:27:08 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:62] - Members(id=60, point=Point(id=17, accumulatePoint=50100, currentPoint=25200), permission=Permission(id=1, permission=USER), email=ynw2341@naver.com, password=$2a$10$Iwn97SgGzDAnFAV2FN3TPe64abAikMK8QPhKmvO5GDXxqKG1R1Xi6, name=임태환, tel=010-1111-1111, status=true, address=경기, postcode=123-123, registerNumber=null)
WARN  24-05-29 22:27:19 [http-nio-0.0.0.0-8000-exec-10] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 22:27:19 [http-nio-0.0.0.0-8000-exec-8] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 22:27:20 [http-nio-0.0.0.0-8000-exec-7] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 22:27:20 [http-nio-0.0.0.0-8000-exec-6] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
INFO  24-05-29 22:27:20 [http-nio-0.0.0.0-8000-exec-2] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5NjcyMTksImV4cCI6MTcxNzA1MzYxOSwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6InludzIzNDFAbmF2ZXIuY29tIn0.An7wdJ2G-K5KMHNrGX4iVCdJvmLC_lULcVsBBrDxgzk
INFO  24-05-29 22:27:20 [http-nio-0.0.0.0-8000-exec-2] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: ynw2341@naver.com
INFO  24-05-29 22:27:20 [http-nio-0.0.0.0-8000-exec-2] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@1c739695, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@4c85751e]]
INFO  24-05-29 22:27:20 [http-nio-0.0.0.0-8000-exec-2] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 22:27:20 [http-nio-0.0.0.0-8000-exec-2] [TokenController-getCurrentUser:40] - Email: ynw2341@naver.com
INFO  24-05-29 22:27:20 [http-nio-0.0.0.0-8000-exec-2] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 22:27:20 [http-nio-0.0.0.0-8000-exec-2] [TokenController-getCurrentUser:62] - Members(id=60, point=Point(id=17, accumulatePoint=50100, currentPoint=25200), permission=Permission(id=1, permission=USER), email=ynw2341@naver.com, password=$2a$10$Iwn97SgGzDAnFAV2FN3TPe64abAikMK8QPhKmvO5GDXxqKG1R1Xi6, name=임태환, tel=010-1111-1111, status=true, address=경기, postcode=123-123, registerNumber=null)
INFO  24-05-29 22:27:20 [http-nio-0.0.0.0-8000-exec-9] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5NjcyMTksImV4cCI6MTcxNzA1MzYxOSwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6InludzIzNDFAbmF2ZXIuY29tIn0.An7wdJ2G-K5KMHNrGX4iVCdJvmLC_lULcVsBBrDxgzk
INFO  24-05-29 22:27:20 [http-nio-0.0.0.0-8000-exec-9] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: ynw2341@naver.com
INFO  24-05-29 22:27:20 [http-nio-0.0.0.0-8000-exec-9] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@2990470e, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@254da671]]
INFO  24-05-29 22:27:20 [http-nio-0.0.0.0-8000-exec-9] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 22:27:20 [http-nio-0.0.0.0-8000-exec-9] [TokenController-getCurrentUser:40] - Email: ynw2341@naver.com
INFO  24-05-29 22:27:20 [http-nio-0.0.0.0-8000-exec-9] [TokenController-getCurrentUser:48] - Authorities: USER
WARN  24-05-29 22:27:20 [http-nio-0.0.0.0-8000-exec-1] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
INFO  24-05-29 22:27:20 [http-nio-0.0.0.0-8000-exec-9] [TokenController-getCurrentUser:62] - Members(id=60, point=Point(id=17, accumulatePoint=50100, currentPoint=25200), permission=Permission(id=1, permission=USER), email=ynw2341@naver.com, password=$2a$10$Iwn97SgGzDAnFAV2FN3TPe64abAikMK8QPhKmvO5GDXxqKG1R1Xi6, name=임태환, tel=010-1111-1111, status=true, address=경기, postcode=123-123, registerNumber=null)
INFO  24-05-29 22:27:20 [http-nio-0.0.0.0-8000-exec-5] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5NjcyMTksImV4cCI6MTcxNzA1MzYxOSwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6InludzIzNDFAbmF2ZXIuY29tIn0.An7wdJ2G-K5KMHNrGX4iVCdJvmLC_lULcVsBBrDxgzk
INFO  24-05-29 22:27:20 [http-nio-0.0.0.0-8000-exec-5] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: ynw2341@naver.com
INFO  24-05-29 22:27:20 [http-nio-0.0.0.0-8000-exec-5] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@4cbab2e0, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@ef68d60]]
INFO  24-05-29 22:27:20 [http-nio-0.0.0.0-8000-exec-5] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 22:27:20 [http-nio-0.0.0.0-8000-exec-5] [TokenController-getCurrentUser:40] - Email: ynw2341@naver.com
INFO  24-05-29 22:27:20 [http-nio-0.0.0.0-8000-exec-5] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 22:27:20 [http-nio-0.0.0.0-8000-exec-5] [TokenController-getCurrentUser:62] - Members(id=60, point=Point(id=17, accumulatePoint=50100, currentPoint=25200), permission=Permission(id=1, permission=USER), email=ynw2341@naver.com, password=$2a$10$Iwn97SgGzDAnFAV2FN3TPe64abAikMK8QPhKmvO5GDXxqKG1R1Xi6, name=임태환, tel=010-1111-1111, status=true, address=경기, postcode=123-123, registerNumber=null)
WARN  24-05-29 22:29:49 [http-nio-0.0.0.0-8000-exec-6] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 22:29:49 [http-nio-0.0.0.0-8000-exec-7] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 22:29:50 [http-nio-0.0.0.0-8000-exec-9] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 22:29:50 [http-nio-0.0.0.0-8000-exec-1] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
INFO  24-05-29 22:29:50 [http-nio-0.0.0.0-8000-exec-3] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5ODQ4NDksImV4cCI6MTcxNzA3MTI0OSwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.onM7zWJbBUw4QPkzDzWUnGhpKTRFjOnR21SYqRPvrk0
INFO  24-05-29 22:29:50 [http-nio-0.0.0.0-8000-exec-3] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 22:29:50 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@6bc0125f, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@4cadd2d1]]
INFO  24-05-29 22:29:50 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 22:29:50 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:40] - Email: hhh@naver.com
INFO  24-05-29 22:29:50 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 22:29:50 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:62] - Members(id=63, point=Point(id=20, accumulatePoint=-100, currentPoint=-100), permission=Permission(id=1, permission=USER), email=hhh@naver.com, password=$2a$10$ygLdbYPG9Gkuu38RQv71YOMKX.zXIilcOdWExl.VqYi2RNBrW2UQC, name=정휘제, tel=01065732265, status=true, address=서울시 우리집, postcode=123456, registerNumber=)
INFO  24-05-29 22:29:50 [http-nio-0.0.0.0-8000-exec-2] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5ODQ4NDksImV4cCI6MTcxNzA3MTI0OSwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.onM7zWJbBUw4QPkzDzWUnGhpKTRFjOnR21SYqRPvrk0
INFO  24-05-29 22:29:50 [http-nio-0.0.0.0-8000-exec-2] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 22:29:50 [http-nio-0.0.0.0-8000-exec-2] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@677d7d7, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@428ec6db]]
INFO  24-05-29 22:29:50 [http-nio-0.0.0.0-8000-exec-2] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 22:29:50 [http-nio-0.0.0.0-8000-exec-2] [TokenController-getCurrentUser:40] - Email: hhh@naver.com
INFO  24-05-29 22:29:50 [http-nio-0.0.0.0-8000-exec-2] [TokenController-getCurrentUser:48] - Authorities: USER
WARN  24-05-29 22:29:50 [http-nio-0.0.0.0-8000-exec-10] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
INFO  24-05-29 22:29:50 [http-nio-0.0.0.0-8000-exec-2] [TokenController-getCurrentUser:62] - Members(id=63, point=Point(id=20, accumulatePoint=-100, currentPoint=-100), permission=Permission(id=1, permission=USER), email=hhh@naver.com, password=$2a$10$ygLdbYPG9Gkuu38RQv71YOMKX.zXIilcOdWExl.VqYi2RNBrW2UQC, name=정휘제, tel=01065732265, status=true, address=서울시 우리집, postcode=123456, registerNumber=)
INFO  24-05-29 22:29:50 [http-nio-0.0.0.0-8000-exec-4] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5ODQ4NDksImV4cCI6MTcxNzA3MTI0OSwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.onM7zWJbBUw4QPkzDzWUnGhpKTRFjOnR21SYqRPvrk0
INFO  24-05-29 22:29:50 [http-nio-0.0.0.0-8000-exec-4] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 22:29:50 [http-nio-0.0.0.0-8000-exec-4] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@19d78ba6, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@51aaf1c4]]
INFO  24-05-29 22:29:50 [http-nio-0.0.0.0-8000-exec-4] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 22:29:50 [http-nio-0.0.0.0-8000-exec-4] [TokenController-getCurrentUser:40] - Email: hhh@naver.com
INFO  24-05-29 22:29:50 [http-nio-0.0.0.0-8000-exec-4] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 22:29:50 [http-nio-0.0.0.0-8000-exec-4] [TokenController-getCurrentUser:62] - Members(id=63, point=Point(id=20, accumulatePoint=-100, currentPoint=-100), permission=Permission(id=1, permission=USER), email=hhh@naver.com, password=$2a$10$ygLdbYPG9Gkuu38RQv71YOMKX.zXIilcOdWExl.VqYi2RNBrW2UQC, name=정휘제, tel=01065732265, status=true, address=서울시 우리집, postcode=123456, registerNumber=)
WARN  24-05-29 22:29:53 [http-nio-0.0.0.0-8000-exec-7] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
INFO  24-05-29 22:34:07 [SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean-destroy:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  24-05-29 22:34:07 [SpringApplicationShutdownHook] [HikariDataSource-close:350] - HikariPool-1 - Shutdown initiated...
INFO  24-05-29 22:34:07 [SpringApplicationShutdownHook] [HikariDataSource-close:352] - HikariPool-1 - Shutdown completed.
INFO  24-05-29 22:34:11 [main] [DsilBackendApplication-logStarting:50] - Starting DsilBackendApplication using Java 17.0.11 with PID 159012 (C:\finalproject\DSILbackend\target\classes started by 문상현 in C:\finalproject\DSILbackend)
INFO  24-05-29 22:34:11 [main] [DsilBackendApplication-logStartupProfileInfo:654] - No active profile set, falling back to 1 default profile: "default"
INFO  24-05-29 22:34:12 [main] [RepositoryConfigurationDelegate-multipleStoresDetected:295] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  24-05-29 22:34:12 [main] [RepositoryConfigurationDelegate-registerRepositoriesIn:143] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-05-29 22:34:12 [main] [RepositoryConfigurationDelegate-registerRepositoriesIn:211] - Finished Spring Data repository scanning in 165 ms. Found 22 JPA repository interfaces.
INFO  24-05-29 22:34:12 [main] [RepositoryConfigurationDelegate-multipleStoresDetected:295] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  24-05-29 22:34:12 [main] [RepositoryConfigurationDelegate-registerRepositoriesIn:143] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  24-05-29 22:34:12 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.AvailableTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:34:12 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.BookmarkRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:34:12 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:34:12 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.FacilityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:34:12 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.InformRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:34:12 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:34:12 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.MenuRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:34:12 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.MyDiningRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:34:12 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:34:12 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.PermissionManageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:34:12 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.PointManageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:34:12 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.RefreshRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:34:12 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.ReplyManageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:34:12 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.ReplyRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:34:12 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.ReservationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:34:12 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.ReserveRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:34:12 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.RestaurantListRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:34:12 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.RestaurantManageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:34:12 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.RestaurantRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:34:12 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.ReviewManageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:34:12 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.ReviewRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:34:12 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.UserManageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 22:34:12 [main] [RepositoryConfigurationDelegate-registerRepositoriesIn:211] - Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
WARN  24-05-29 22:34:12 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:34:12 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:34:12 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:34:12 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'jdbcConnectionDetails' of type [org.springframework.boot.autoconfigure.jdbc.PropertiesJdbcConnectionDetails] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:34:12 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'dataSource' of type [com.zaxxer.hikari.HikariDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:34:12 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties' of type [org.springframework.boot.autoconfigure.orm.jpa.JpaProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:34:12 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties' of type [org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:34:12 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:34:12 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'hikariPoolDataSourceMetadataProvider' of type [org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration$$Lambda$757/0x000001be01464648] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:34:12 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' of type [org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:34:12 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:34:12 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'transactionExecutionListeners' of type [org.springframework.boot.autoconfigure.transaction.ExecutionListenersTransactionManagerCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:34:12 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:34:12 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:34:13 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration' of type [org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:34:13 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties' of type [org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:34:13 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'dataSourceScriptDatabaseInitializer' of type [org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:34:13 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'org.springframework.boot.autoconfigure.batch.BatchAutoConfiguration$DataSourceInitializerConfiguration' of type [org.springframework.boot.autoconfigure.batch.BatchAutoConfiguration$DataSourceInitializerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:34:13 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'spring.batch-org.springframework.boot.autoconfigure.batch.BatchProperties' of type [org.springframework.boot.autoconfigure.batch.BatchProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
INFO  24-05-29 22:34:13 [main] [HikariDataSource-getConnection:110] - HikariPool-1 - Starting...
INFO  24-05-29 22:34:13 [main] [HikariPool-checkFailFast:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4bc9ca97
INFO  24-05-29 22:34:13 [main] [HikariDataSource-getConnection:123] - HikariPool-1 - Start completed.
WARN  24-05-29 22:34:13 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'batchDataSourceInitializer' of type [org.springframework.boot.autoconfigure.batch.BatchDataSourceScriptDatabaseInitializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:34:13 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'jpaVendorAdapter' of type [org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:34:13 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'entityManagerFactoryBuilder' of type [org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:34:13 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'persistenceManagedTypes' of type [org.springframework.orm.jpa.persistenceunit.SimplePersistenceManagedTypes] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
INFO  24-05-29 22:34:13 [main] [LogHelper-logPersistenceUnitInformation:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-05-29 22:34:13 [main] [Version-logVersion:44] - HHH000412: Hibernate ORM core version 6.4.4.Final
INFO  24-05-29 22:34:13 [main] [RegionFactoryInitiator-initiateService:50] - HHH000026: Second-level cache disabled
INFO  24-05-29 22:34:13 [main] [SpringPersistenceUnitInfo-addTransformer:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
WARN  24-05-29 22:34:13 [main] [deprecation-constructDialect:153] - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
INFO  24-05-29 22:34:14 [main] [JtaPlatformInitiator-initiateService:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
INFO  24-05-29 22:34:14 [main] [LocalContainerEntityManagerFactoryBean-buildNativeEntityManagerFactory:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  24-05-29 22:34:14 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'entityManagerFactory' of type [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:34:14 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'entityManagerFactory' of type [jdk.proxy2.$Proxy123] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:34:14 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'transactionManager' of type [org.springframework.orm.jpa.JpaTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 22:34:14 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:429] - Bean 'org.springframework.boot.autoconfigure.batch.BatchAutoConfiguration$SpringBootBatchConfiguration' of type [org.springframework.boot.autoconfigure.batch.BatchAutoConfiguration$SpringBootBatchConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [jobRegistryBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
INFO  24-05-29 22:34:15 [main] [TomcatWebServer-initialize:109] - Tomcat initialized with port 8000 (http)
INFO  24-05-29 22:34:15 [main] [Http11NioProtocol-log:173] - Initializing ProtocolHandler ["http-nio-0.0.0.0-8000"]
INFO  24-05-29 22:34:15 [main] [StandardService-log:173] - Starting service [Tomcat]
INFO  24-05-29 22:34:15 [main] [StandardEngine-log:173] - Starting Servlet engine: [Apache Tomcat/10.1.20]
INFO  24-05-29 22:34:15 [main] [[/]-log:173] - Initializing Spring embedded WebApplicationContext
INFO  24-05-29 22:34:15 [main] [ServletWebServerApplicationContext-prepareWebApplicationContext:296] - Root WebApplicationContext: initialization completed in 3460 ms
INFO  24-05-29 22:34:15 [main] [QueryEnhancerFactory-<clinit>:49] - Hibernate is in classpath; If applicable, HQL parser will be used.
WARN  24-05-29 22:34:16 [main] [JpaBaseConfiguration$JpaWebConfiguration-openEntityManagerInViewInterceptor:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-05-29 22:34:17 [main] [DefaultSecurityFilterChain-<init>:54] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@43fa643e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@30dd9615, org.springframework.security.web.context.SecurityContextHolderFilter@5eb66704, org.springframework.security.web.header.HeaderWriterFilter@16ae647d, org.springframework.web.filter.CorsFilter@35db3ea2, com.ssg.dsilbackend.jwt.CustomLogoutFilter@2c27e36, org.springframework.security.web.authentication.logout.LogoutFilter@1bc14017, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@570c6601, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@4c27fe7a, com.ssg.dsilbackend.jwt.JWTFilter@128921c4, com.ssg.dsilbackend.jwt.LoginFilter@4eb870be, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@ec4e9e4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@53a49745, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@227a79e5, org.springframework.security.web.session.SessionManagementFilter@4f6cf902, org.springframework.security.web.access.ExceptionTranslationFilter@2012f14e, org.springframework.security.web.access.intercept.AuthorizationFilter@4892206a]
WARN  24-05-29 22:34:17 [main] [ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration-checkTemplateLocationExists:101] - Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
INFO  24-05-29 22:34:17 [main] [Http11NioProtocol-log:173] - Starting ProtocolHandler ["http-nio-0.0.0.0-8000"]
INFO  24-05-29 22:34:17 [main] [TomcatWebServer-start:241] - Tomcat started on port 8000 (http) with context path ''
INFO  24-05-29 22:34:17 [main] [DsilBackendApplication-logStarted:56] - Started DsilBackendApplication in 6.447 seconds (process running for 7.018)
INFO  24-05-29 22:34:17 [main] [JobLauncherApplicationRunner-run:168] - Running default command line with: []
INFO  24-05-29 22:34:21 [http-nio-0.0.0.0-8000-exec-2] [[/]-log:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  24-05-29 22:34:21 [http-nio-0.0.0.0-8000-exec-2] [DispatcherServlet-initServletBean:532] - Initializing Servlet 'dispatcherServlet'
INFO  24-05-29 22:34:21 [http-nio-0.0.0.0-8000-exec-2] [DispatcherServlet-initServletBean:554] - Completed initialization in 2 ms
WARN  24-05-29 22:34:21 [http-nio-0.0.0.0-8000-exec-1] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 22:34:21 [http-nio-0.0.0.0-8000-exec-2] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 22:34:22 [http-nio-0.0.0.0-8000-exec-3] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 22:34:22 [http-nio-0.0.0.0-8000-exec-4] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
INFO  24-05-29 22:34:22 [http-nio-0.0.0.0-8000-exec-5] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5ODQ4NDksImV4cCI6MTcxNzA3MTI0OSwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.onM7zWJbBUw4QPkzDzWUnGhpKTRFjOnR21SYqRPvrk0
WARN  24-05-29 22:34:22 [http-nio-0.0.0.0-8000-exec-6] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
INFO  24-05-29 22:34:22 [http-nio-0.0.0.0-8000-exec-5] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 22:34:22 [http-nio-0.0.0.0-8000-exec-5] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@6dcb7578, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@25cbfca0]]
INFO  24-05-29 22:34:22 [http-nio-0.0.0.0-8000-exec-5] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 22:34:22 [http-nio-0.0.0.0-8000-exec-5] [TokenController-getCurrentUser:40] - Email: hhh@naver.com
INFO  24-05-29 22:34:22 [http-nio-0.0.0.0-8000-exec-5] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 22:34:22 [http-nio-0.0.0.0-8000-exec-5] [TokenController-getCurrentUser:62] - Members(id=63, point=Point(id=20, accumulatePoint=-100, currentPoint=-100), permission=Permission(id=1, permission=USER), email=hhh@naver.com, password=$2a$10$ygLdbYPG9Gkuu38RQv71YOMKX.zXIilcOdWExl.VqYi2RNBrW2UQC, name=정휘제, tel=01065732265, status=true, address=서울시 우리집, postcode=123456, registerNumber=)
INFO  24-05-29 22:34:22 [http-nio-0.0.0.0-8000-exec-8] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5ODQ4NDksImV4cCI6MTcxNzA3MTI0OSwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.onM7zWJbBUw4QPkzDzWUnGhpKTRFjOnR21SYqRPvrk0
INFO  24-05-29 22:34:22 [http-nio-0.0.0.0-8000-exec-8] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 22:34:22 [http-nio-0.0.0.0-8000-exec-8] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@690baaf0, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@53229e9e]]
INFO  24-05-29 22:34:22 [http-nio-0.0.0.0-8000-exec-8] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 22:34:22 [http-nio-0.0.0.0-8000-exec-8] [TokenController-getCurrentUser:40] - Email: hhh@naver.com
INFO  24-05-29 22:34:22 [http-nio-0.0.0.0-8000-exec-8] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 22:34:22 [http-nio-0.0.0.0-8000-exec-8] [TokenController-getCurrentUser:62] - Members(id=63, point=Point(id=20, accumulatePoint=-100, currentPoint=-100), permission=Permission(id=1, permission=USER), email=hhh@naver.com, password=$2a$10$ygLdbYPG9Gkuu38RQv71YOMKX.zXIilcOdWExl.VqYi2RNBrW2UQC, name=정휘제, tel=01065732265, status=true, address=서울시 우리집, postcode=123456, registerNumber=)
INFO  24-05-29 22:34:22 [http-nio-0.0.0.0-8000-exec-7] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5ODQ4NDksImV4cCI6MTcxNzA3MTI0OSwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.onM7zWJbBUw4QPkzDzWUnGhpKTRFjOnR21SYqRPvrk0
INFO  24-05-29 22:34:22 [http-nio-0.0.0.0-8000-exec-7] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 22:34:22 [http-nio-0.0.0.0-8000-exec-7] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@ef34b88, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@7656ae1e]]
INFO  24-05-29 22:34:22 [http-nio-0.0.0.0-8000-exec-7] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 22:34:22 [http-nio-0.0.0.0-8000-exec-7] [TokenController-getCurrentUser:40] - Email: hhh@naver.com
INFO  24-05-29 22:34:22 [http-nio-0.0.0.0-8000-exec-7] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 22:34:22 [http-nio-0.0.0.0-8000-exec-7] [TokenController-getCurrentUser:62] - Members(id=63, point=Point(id=20, accumulatePoint=-100, currentPoint=-100), permission=Permission(id=1, permission=USER), email=hhh@naver.com, password=$2a$10$ygLdbYPG9Gkuu38RQv71YOMKX.zXIilcOdWExl.VqYi2RNBrW2UQC, name=정휘제, tel=01065732265, status=true, address=서울시 우리집, postcode=123456, registerNumber=)
WARN  24-05-29 22:34:25 [http-nio-0.0.0.0-8000-exec-9] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 22:34:41 [http-nio-0.0.0.0-8000-exec-10] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
INFO  24-05-29 22:34:59 [SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean-destroy:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  24-05-29 22:34:59 [SpringApplicationShutdownHook] [HikariDataSource-close:350] - HikariPool-1 - Shutdown initiated...
INFO  24-05-29 22:34:59 [SpringApplicationShutdownHook] [HikariDataSource-close:352] - HikariPool-1 - Shutdown completed.
INFO  24-05-29 23:33:54 [main] [DsilBackendApplication-logStarting:50] - Starting DsilBackendApplication using Java 17.0.10 with PID 11542 (/Users/yunhosang/Desktop/dsilback/DSILbackend/target/classes started by yunhosang in /Users/yunhosang/Desktop/dsilback/DSILbackend)
INFO  24-05-29 23:33:54 [main] [DsilBackendApplication-logStartupProfileInfo:654] - No active profile set, falling back to 1 default profile: "default"
INFO  24-05-29 23:33:56 [main] [RepositoryConfigurationDelegate-multipleStoresDetected:295] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  24-05-29 23:33:56 [main] [RepositoryConfigurationDelegate-registerRepositoriesIn:143] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-05-29 23:33:57 [main] [RepositoryConfigurationDelegate-registerRepositoriesIn:211] - Finished Spring Data repository scanning in 545 ms. Found 22 JPA repository interfaces.
INFO  24-05-29 23:33:57 [main] [RepositoryConfigurationDelegate-multipleStoresDetected:295] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  24-05-29 23:33:57 [main] [RepositoryConfigurationDelegate-registerRepositoriesIn:143] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  24-05-29 23:33:57 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.AvailableTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 23:33:57 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.BookmarkRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 23:33:57 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 23:33:57 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.FacilityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 23:33:57 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.InformRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 23:33:57 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 23:33:57 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.MenuRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 23:33:57 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.MyDiningRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 23:33:57 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 23:33:57 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.PermissionManageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 23:33:57 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.PointManageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 23:33:57 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.RefreshRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 23:33:57 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.ReplyManageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 23:33:57 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.ReplyRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 23:33:57 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.ReservationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 23:33:57 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.ReserveRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 23:33:57 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.RestaurantListRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 23:33:57 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.RestaurantManageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 23:33:57 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.RestaurantRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 23:33:57 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.ReviewManageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 23:33:57 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.ReviewRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 23:33:57 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.UserManageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 23:33:57 [main] [RepositoryConfigurationDelegate-registerRepositoriesIn:211] - Finished Spring Data repository scanning in 29 ms. Found 0 Redis repository interfaces.
WARN  24-05-29 23:33:58 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 23:33:58 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 23:33:58 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 23:33:58 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'jdbcConnectionDetails' of type [org.springframework.boot.autoconfigure.jdbc.PropertiesJdbcConnectionDetails] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 23:33:58 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'dataSource' of type [com.zaxxer.hikari.HikariDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 23:33:58 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties' of type [org.springframework.boot.autoconfigure.orm.jpa.JpaProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 23:33:58 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties' of type [org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 23:33:58 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 23:33:58 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'hikariPoolDataSourceMetadataProvider' of type [org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration$$Lambda$754/0x000000011647db08] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 23:33:58 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' of type [org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 23:33:59 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 23:33:59 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'transactionExecutionListeners' of type [org.springframework.boot.autoconfigure.transaction.ExecutionListenersTransactionManagerCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 23:33:59 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 23:33:59 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 23:33:59 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration' of type [org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 23:33:59 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties' of type [org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 23:33:59 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'dataSourceScriptDatabaseInitializer' of type [org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 23:33:59 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'org.springframework.boot.autoconfigure.batch.BatchAutoConfiguration$DataSourceInitializerConfiguration' of type [org.springframework.boot.autoconfigure.batch.BatchAutoConfiguration$DataSourceInitializerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 23:33:59 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'spring.batch-org.springframework.boot.autoconfigure.batch.BatchProperties' of type [org.springframework.boot.autoconfigure.batch.BatchProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
INFO  24-05-29 23:33:59 [main] [HikariDataSource-getConnection:110] - HikariPool-1 - Starting...
INFO  24-05-29 23:33:59 [main] [HikariPool-checkFailFast:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2bec068b
INFO  24-05-29 23:33:59 [main] [HikariDataSource-getConnection:123] - HikariPool-1 - Start completed.
WARN  24-05-29 23:33:59 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'batchDataSourceInitializer' of type [org.springframework.boot.autoconfigure.batch.BatchDataSourceScriptDatabaseInitializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 23:33:59 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'jpaVendorAdapter' of type [org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 23:33:59 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'entityManagerFactoryBuilder' of type [org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 23:33:59 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'persistenceManagedTypes' of type [org.springframework.orm.jpa.persistenceunit.SimplePersistenceManagedTypes] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
INFO  24-05-29 23:33:59 [main] [LogHelper-logPersistenceUnitInformation:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-05-29 23:33:59 [main] [Version-logVersion:44] - HHH000412: Hibernate ORM core version 6.4.4.Final
INFO  24-05-29 23:34:00 [main] [RegionFactoryInitiator-initiateService:50] - HHH000026: Second-level cache disabled
INFO  24-05-29 23:34:00 [main] [SpringPersistenceUnitInfo-addTransformer:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
WARN  24-05-29 23:34:00 [main] [deprecation-constructDialect:153] - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
INFO  24-05-29 23:34:04 [main] [JtaPlatformInitiator-initiateService:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
INFO  24-05-29 23:34:04 [main] [LocalContainerEntityManagerFactoryBean-buildNativeEntityManagerFactory:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  24-05-29 23:34:04 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'entityManagerFactory' of type [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 23:34:04 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'entityManagerFactory' of type [jdk.proxy2.$Proxy123] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 23:34:04 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'transactionManager' of type [org.springframework.orm.jpa.JpaTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 23:34:04 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:429] - Bean 'org.springframework.boot.autoconfigure.batch.BatchAutoConfiguration$SpringBootBatchConfiguration' of type [org.springframework.boot.autoconfigure.batch.BatchAutoConfiguration$SpringBootBatchConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [jobRegistryBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
INFO  24-05-29 23:34:06 [main] [TomcatWebServer-initialize:109] - Tomcat initialized with port 8000 (http)
INFO  24-05-29 23:34:06 [main] [Http11NioProtocol-log:173] - Initializing ProtocolHandler ["http-nio-0.0.0.0-8000"]
INFO  24-05-29 23:34:06 [main] [StandardService-log:173] - Starting service [Tomcat]
INFO  24-05-29 23:34:06 [main] [StandardEngine-log:173] - Starting Servlet engine: [Apache Tomcat/10.1.20]
INFO  24-05-29 23:34:06 [main] [[/]-log:173] - Initializing Spring embedded WebApplicationContext
INFO  24-05-29 23:34:06 [main] [ServletWebServerApplicationContext-prepareWebApplicationContext:296] - Root WebApplicationContext: initialization completed in 12422 ms
INFO  24-05-29 23:34:08 [main] [QueryEnhancerFactory-<clinit>:49] - Hibernate is in classpath; If applicable, HQL parser will be used.
WARN  24-05-29 23:34:12 [main] [JpaBaseConfiguration$JpaWebConfiguration-openEntityManagerInViewInterceptor:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-05-29 23:34:13 [main] [DefaultSecurityFilterChain-<init>:54] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@55947250, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@28e3bcb8, org.springframework.security.web.context.SecurityContextHolderFilter@1d5ada5a, org.springframework.security.web.header.HeaderWriterFilter@365a0910, org.springframework.web.filter.CorsFilter@1b06e304, com.ssg.dsilbackend.jwt.CustomLogoutFilter@d70bdec, org.springframework.security.web.authentication.logout.LogoutFilter@543982ac, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@53ca202f, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@e7e6e94, com.ssg.dsilbackend.jwt.JWTFilter@7b8058e0, com.ssg.dsilbackend.jwt.LoginFilter@4eb32d54, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1c6912db, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@a5a9502, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6281f945, org.springframework.security.web.session.SessionManagementFilter@25ae0223, org.springframework.security.web.access.ExceptionTranslationFilter@20d35171, org.springframework.security.web.access.intercept.AuthorizationFilter@6f677c34]
WARN  24-05-29 23:34:14 [main] [ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration-checkTemplateLocationExists:101] - Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
INFO  24-05-29 23:34:14 [main] [Http11NioProtocol-log:173] - Starting ProtocolHandler ["http-nio-0.0.0.0-8000"]
INFO  24-05-29 23:34:14 [main] [TomcatWebServer-start:241] - Tomcat started on port 8000 (http) with context path ''
INFO  24-05-29 23:34:14 [main] [DsilBackendApplication-logStarted:56] - Started DsilBackendApplication in 23.405 seconds (process running for 26.074)
INFO  24-05-29 23:34:14 [main] [JobLauncherApplicationRunner-run:168] - Running default command line with: []
INFO  24-05-29 23:34:57 [http-nio-0.0.0.0-8000-exec-2] [[/]-log:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  24-05-29 23:34:57 [http-nio-0.0.0.0-8000-exec-2] [DispatcherServlet-initServletBean:532] - Initializing Servlet 'dispatcherServlet'
INFO  24-05-29 23:34:57 [http-nio-0.0.0.0-8000-exec-2] [DispatcherServlet-initServletBean:554] - Completed initialization in 3 ms
WARN  24-05-29 23:34:57 [http-nio-0.0.0.0-8000-exec-3] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:34:57 [http-nio-0.0.0.0-8000-exec-2] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:34:57 [http-nio-0.0.0.0-8000-exec-1] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:34:59 [http-nio-0.0.0.0-8000-exec-5] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:34:59 [http-nio-0.0.0.0-8000-exec-6] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:34:59 [http-nio-0.0.0.0-8000-exec-4] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:35:07 [http-nio-0.0.0.0-8000-exec-7] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:35:07 [http-nio-0.0.0.0-8000-exec-8] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:35:07 [http-nio-0.0.0.0-8000-exec-9] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:35:10 [http-nio-0.0.0.0-8000-exec-10] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:35:10 [http-nio-0.0.0.0-8000-exec-2] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:35:10 [http-nio-0.0.0.0-8000-exec-1] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:35:25 [http-nio-0.0.0.0-8000-exec-5] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
INFO  24-05-29 23:35:25 [http-nio-0.0.0.0-8000-exec-5] [UserManageController-postLogin:76] - 도착했는지 확인
INFO  24-05-29 23:35:25 [http-nio-0.0.0.0-8000-exec-5] [UserManageController-postLogin:77] - com.ssg.dsilbackend.dto.userManage.LoginDTO@305d0e5e
INFO  24-05-29 23:35:26 [http-nio-0.0.0.0-8000-exec-5] [UserManageController-postLogin:87] - JWT 토큰 생성 및 설정 완료
INFO  24-05-29 23:35:26 [http-nio-0.0.0.0-8000-exec-6] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTMzMjYsImV4cCI6MTcxNzA3OTcyNiwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImR2YmZAbmF2ZXIuY29tIn0.P_w00ZrQodUEv5tovsZZoOQ4z8IiFELNafblEEESqOI
INFO  24-05-29 23:35:26 [http-nio-0.0.0.0-8000-exec-6] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: dvbf@naver.com
INFO  24-05-29 23:35:26 [http-nio-0.0.0.0-8000-exec-6] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@2c743b7b, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@e44bcc]]
INFO  24-05-29 23:35:26 [http-nio-0.0.0.0-8000-exec-6] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 23:35:26 [http-nio-0.0.0.0-8000-exec-6] [TokenController-getCurrentUser:40] - Email: dvbf@naver.com
INFO  24-05-29 23:35:26 [http-nio-0.0.0.0-8000-exec-6] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 23:35:26 [http-nio-0.0.0.0-8000-exec-6] [TokenController-getCurrentUser:62] - Members(id=61, point=Point(id=18, accumulatePoint=null, currentPoint=1500), permission=Permission(id=1, permission=USER), email=dvbf@naver.com, password=$2a$10$DZJBLvmOkHh.vzDnIa6cN.tq1adz3XS/HMEWKuI1tgiba/VeYPHVa, name=윤호상, tel=010-9677-7048, status=true, address=서울 노원구 덕릉로71길 30 105동 405호, postcode=01709, registerNumber=)
INFO  24-05-29 23:35:26 [http-nio-0.0.0.0-8000-exec-6] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTMzMjYsImV4cCI6MTcxNzA3OTcyNiwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImR2YmZAbmF2ZXIuY29tIn0.P_w00ZrQodUEv5tovsZZoOQ4z8IiFELNafblEEESqOI
INFO  24-05-29 23:35:26 [http-nio-0.0.0.0-8000-exec-6] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: dvbf@naver.com
INFO  24-05-29 23:35:26 [http-nio-0.0.0.0-8000-exec-6] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@4fa168cc, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@1466b7fb]]
INFO  24-05-29 23:35:26 [http-nio-0.0.0.0-8000-exec-6] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 23:35:26 [http-nio-0.0.0.0-8000-exec-6] [TokenController-getCurrentUser:40] - Email: dvbf@naver.com
INFO  24-05-29 23:35:26 [http-nio-0.0.0.0-8000-exec-6] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 23:35:26 [http-nio-0.0.0.0-8000-exec-8] [JWTFilter-doFilterInternal:46] - Access token from header: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTMzMjYsImV4cCI6MTcxNjk5MzkyNiwicm9sZSI6IlVTRVIiLCJuYW1lIjoi7Jyk7Zi47IOBIiwiY2F0ZWdvcnkiOiJhY2Nlc3MiLCJlbWFpbCI6ImR2YmZAbmF2ZXIuY29tIn0.qsF27Fe4qYZqTxgHG68Wu3kHvrVtOChPkCC4U_A6QmY
INFO  24-05-29 23:35:26 [http-nio-0.0.0.0-8000-exec-9] [JWTFilter-doFilterInternal:46] - Access token from header: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTMzMjYsImV4cCI6MTcxNjk5MzkyNiwicm9sZSI6IlVTRVIiLCJuYW1lIjoi7Jyk7Zi47IOBIiwiY2F0ZWdvcnkiOiJhY2Nlc3MiLCJlbWFpbCI6ImR2YmZAbmF2ZXIuY29tIn0.qsF27Fe4qYZqTxgHG68Wu3kHvrVtOChPkCC4U_A6QmY
INFO  24-05-29 23:35:26 [http-nio-0.0.0.0-8000-exec-7] [JWTFilter-doFilterInternal:46] - Access token from header: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTMzMjYsImV4cCI6MTcxNjk5MzkyNiwicm9sZSI6IlVTRVIiLCJuYW1lIjoi7Jyk7Zi47IOBIiwiY2F0ZWdvcnkiOiJhY2Nlc3MiLCJlbWFpbCI6ImR2YmZAbmF2ZXIuY29tIn0.qsF27Fe4qYZqTxgHG68Wu3kHvrVtOChPkCC4U_A6QmY
INFO  24-05-29 23:35:26 [http-nio-0.0.0.0-8000-exec-6] [TokenController-getCurrentUser:62] - Members(id=61, point=Point(id=18, accumulatePoint=null, currentPoint=1500), permission=Permission(id=1, permission=USER), email=dvbf@naver.com, password=$2a$10$DZJBLvmOkHh.vzDnIa6cN.tq1adz3XS/HMEWKuI1tgiba/VeYPHVa, name=윤호상, tel=010-9677-7048, status=true, address=서울 노원구 덕릉로71길 30 105동 405호, postcode=01709, registerNumber=)
INFO  24-05-29 23:35:26 [http-nio-0.0.0.0-8000-exec-8] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: dvbf@naver.com
INFO  24-05-29 23:35:26 [http-nio-0.0.0.0-8000-exec-9] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: dvbf@naver.com
INFO  24-05-29 23:35:26 [http-nio-0.0.0.0-8000-exec-7] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: dvbf@naver.com
INFO  24-05-29 23:35:30 [http-nio-0.0.0.0-8000-exec-1] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTMzMjYsImV4cCI6MTcxNzA3OTcyNiwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImR2YmZAbmF2ZXIuY29tIn0.P_w00ZrQodUEv5tovsZZoOQ4z8IiFELNafblEEESqOI
INFO  24-05-29 23:35:30 [http-nio-0.0.0.0-8000-exec-1] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: dvbf@naver.com
INFO  24-05-29 23:35:30 [http-nio-0.0.0.0-8000-exec-1] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@bb151ee, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@12887a6a]]
INFO  24-05-29 23:35:30 [http-nio-0.0.0.0-8000-exec-1] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 23:35:30 [http-nio-0.0.0.0-8000-exec-1] [TokenController-getCurrentUser:40] - Email: dvbf@naver.com
INFO  24-05-29 23:35:30 [http-nio-0.0.0.0-8000-exec-1] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 23:35:30 [http-nio-0.0.0.0-8000-exec-1] [TokenController-getCurrentUser:62] - Members(id=61, point=Point(id=18, accumulatePoint=null, currentPoint=1500), permission=Permission(id=1, permission=USER), email=dvbf@naver.com, password=$2a$10$DZJBLvmOkHh.vzDnIa6cN.tq1adz3XS/HMEWKuI1tgiba/VeYPHVa, name=윤호상, tel=010-9677-7048, status=true, address=서울 노원구 덕릉로71길 30 105동 405호, postcode=01709, registerNumber=)
INFO  24-05-29 23:35:30 [http-nio-0.0.0.0-8000-exec-10] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTMzMjYsImV4cCI6MTcxNzA3OTcyNiwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImR2YmZAbmF2ZXIuY29tIn0.P_w00ZrQodUEv5tovsZZoOQ4z8IiFELNafblEEESqOI
INFO  24-05-29 23:35:30 [http-nio-0.0.0.0-8000-exec-3] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTMzMjYsImV4cCI6MTcxNzA3OTcyNiwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImR2YmZAbmF2ZXIuY29tIn0.P_w00ZrQodUEv5tovsZZoOQ4z8IiFELNafblEEESqOI
INFO  24-05-29 23:35:30 [http-nio-0.0.0.0-8000-exec-10] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: dvbf@naver.com
INFO  24-05-29 23:35:30 [http-nio-0.0.0.0-8000-exec-10] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@60d6fcb2, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@71b2f9ef]]
INFO  24-05-29 23:35:30 [http-nio-0.0.0.0-8000-exec-10] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 23:35:30 [http-nio-0.0.0.0-8000-exec-10] [TokenController-getCurrentUser:40] - Email: dvbf@naver.com
INFO  24-05-29 23:35:30 [http-nio-0.0.0.0-8000-exec-10] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 23:35:30 [http-nio-0.0.0.0-8000-exec-3] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: dvbf@naver.com
INFO  24-05-29 23:35:30 [http-nio-0.0.0.0-8000-exec-3] [UserManageController-getUserData:189] - dvbf@naver.com get 요청
INFO  24-05-29 23:35:30 [http-nio-0.0.0.0-8000-exec-10] [TokenController-getCurrentUser:62] - Members(id=61, point=Point(id=18, accumulatePoint=null, currentPoint=1500), permission=Permission(id=1, permission=USER), email=dvbf@naver.com, password=$2a$10$DZJBLvmOkHh.vzDnIa6cN.tq1adz3XS/HMEWKuI1tgiba/VeYPHVa, name=윤호상, tel=010-9677-7048, status=true, address=서울 노원구 덕릉로71길 30 105동 405호, postcode=01709, registerNumber=)
INFO  24-05-29 23:35:39 [http-nio-0.0.0.0-8000-exec-5] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTMzMjYsImV4cCI6MTcxNzA3OTcyNiwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImR2YmZAbmF2ZXIuY29tIn0.P_w00ZrQodUEv5tovsZZoOQ4z8IiFELNafblEEESqOI
INFO  24-05-29 23:35:39 [http-nio-0.0.0.0-8000-exec-5] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: dvbf@naver.com
INFO  24-05-29 23:35:39 [http-nio-0.0.0.0-8000-exec-5] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@5150d4cb, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@5d818ac4]]
INFO  24-05-29 23:35:39 [http-nio-0.0.0.0-8000-exec-5] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 23:35:39 [http-nio-0.0.0.0-8000-exec-5] [TokenController-getCurrentUser:40] - Email: dvbf@naver.com
INFO  24-05-29 23:35:39 [http-nio-0.0.0.0-8000-exec-5] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 23:35:39 [http-nio-0.0.0.0-8000-exec-5] [TokenController-getCurrentUser:62] - Members(id=61, point=Point(id=18, accumulatePoint=null, currentPoint=1500), permission=Permission(id=1, permission=USER), email=dvbf@naver.com, password=$2a$10$DZJBLvmOkHh.vzDnIa6cN.tq1adz3XS/HMEWKuI1tgiba/VeYPHVa, name=윤호상, tel=010-9677-7048, status=true, address=서울 노원구 덕릉로71길 30 105동 405호, postcode=01709, registerNumber=)
INFO  24-05-29 23:35:39 [http-nio-0.0.0.0-8000-exec-9] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTMzMjYsImV4cCI6MTcxNzA3OTcyNiwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImR2YmZAbmF2ZXIuY29tIn0.P_w00ZrQodUEv5tovsZZoOQ4z8IiFELNafblEEESqOI
INFO  24-05-29 23:35:39 [http-nio-0.0.0.0-8000-exec-7] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTMzMjYsImV4cCI6MTcxNzA3OTcyNiwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImR2YmZAbmF2ZXIuY29tIn0.P_w00ZrQodUEv5tovsZZoOQ4z8IiFELNafblEEESqOI
INFO  24-05-29 23:35:39 [http-nio-0.0.0.0-8000-exec-9] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: dvbf@naver.com
INFO  24-05-29 23:35:39 [http-nio-0.0.0.0-8000-exec-7] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: dvbf@naver.com
INFO  24-05-29 23:35:39 [http-nio-0.0.0.0-8000-exec-1] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTMzMjYsImV4cCI6MTcxNzA3OTcyNiwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImR2YmZAbmF2ZXIuY29tIn0.P_w00ZrQodUEv5tovsZZoOQ4z8IiFELNafblEEESqOI
INFO  24-05-29 23:35:39 [http-nio-0.0.0.0-8000-exec-1] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: dvbf@naver.com
INFO  24-05-29 23:35:41 [http-nio-0.0.0.0-8000-exec-2] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTMzMjYsImV4cCI6MTcxNzA3OTcyNiwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImR2YmZAbmF2ZXIuY29tIn0.P_w00ZrQodUEv5tovsZZoOQ4z8IiFELNafblEEESqOI
INFO  24-05-29 23:35:41 [http-nio-0.0.0.0-8000-exec-2] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: dvbf@naver.com
INFO  24-05-29 23:35:41 [http-nio-0.0.0.0-8000-exec-2] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@5ea21506, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@3930b87e]]
INFO  24-05-29 23:35:41 [http-nio-0.0.0.0-8000-exec-2] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 23:35:41 [http-nio-0.0.0.0-8000-exec-2] [TokenController-getCurrentUser:40] - Email: dvbf@naver.com
INFO  24-05-29 23:35:41 [http-nio-0.0.0.0-8000-exec-2] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 23:35:41 [http-nio-0.0.0.0-8000-exec-2] [TokenController-getCurrentUser:62] - Members(id=61, point=Point(id=18, accumulatePoint=null, currentPoint=1500), permission=Permission(id=1, permission=USER), email=dvbf@naver.com, password=$2a$10$DZJBLvmOkHh.vzDnIa6cN.tq1adz3XS/HMEWKuI1tgiba/VeYPHVa, name=윤호상, tel=010-9677-7048, status=true, address=서울 노원구 덕릉로71길 30 105동 405호, postcode=01709, registerNumber=)
INFO  24-05-29 23:35:41 [http-nio-0.0.0.0-8000-exec-10] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTMzMjYsImV4cCI6MTcxNzA3OTcyNiwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImR2YmZAbmF2ZXIuY29tIn0.P_w00ZrQodUEv5tovsZZoOQ4z8IiFELNafblEEESqOI
INFO  24-05-29 23:35:41 [http-nio-0.0.0.0-8000-exec-10] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: dvbf@naver.com
INFO  24-05-29 23:35:41 [http-nio-0.0.0.0-8000-exec-10] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@3b70531e, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@3e7a3eea]]
INFO  24-05-29 23:35:41 [http-nio-0.0.0.0-8000-exec-10] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 23:35:41 [http-nio-0.0.0.0-8000-exec-10] [TokenController-getCurrentUser:40] - Email: dvbf@naver.com
INFO  24-05-29 23:35:41 [http-nio-0.0.0.0-8000-exec-10] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 23:35:41 [http-nio-0.0.0.0-8000-exec-3] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTMzMjYsImV4cCI6MTcxNzA3OTcyNiwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImR2YmZAbmF2ZXIuY29tIn0.P_w00ZrQodUEv5tovsZZoOQ4z8IiFELNafblEEESqOI
INFO  24-05-29 23:35:41 [http-nio-0.0.0.0-8000-exec-10] [TokenController-getCurrentUser:62] - Members(id=61, point=Point(id=18, accumulatePoint=null, currentPoint=1500), permission=Permission(id=1, permission=USER), email=dvbf@naver.com, password=$2a$10$DZJBLvmOkHh.vzDnIa6cN.tq1adz3XS/HMEWKuI1tgiba/VeYPHVa, name=윤호상, tel=010-9677-7048, status=true, address=서울 노원구 덕릉로71길 30 105동 405호, postcode=01709, registerNumber=)
INFO  24-05-29 23:35:41 [http-nio-0.0.0.0-8000-exec-3] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: dvbf@naver.com
INFO  24-05-29 23:35:41 [http-nio-0.0.0.0-8000-exec-3] [UserManageController-getUserData:189] - dvbf@naver.com get 요청
INFO  24-05-29 23:35:46 [http-nio-0.0.0.0-8000-exec-5] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTMzMjYsImV4cCI6MTcxNzA3OTcyNiwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImR2YmZAbmF2ZXIuY29tIn0.P_w00ZrQodUEv5tovsZZoOQ4z8IiFELNafblEEESqOI
INFO  24-05-29 23:35:46 [http-nio-0.0.0.0-8000-exec-5] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: dvbf@naver.com
INFO  24-05-29 23:35:46 [http-nio-0.0.0.0-8000-exec-5] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@26eca638, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@4fe7ed3a]]
INFO  24-05-29 23:35:46 [http-nio-0.0.0.0-8000-exec-5] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 23:35:46 [http-nio-0.0.0.0-8000-exec-5] [TokenController-getCurrentUser:40] - Email: dvbf@naver.com
INFO  24-05-29 23:35:46 [http-nio-0.0.0.0-8000-exec-5] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 23:35:46 [http-nio-0.0.0.0-8000-exec-5] [TokenController-getCurrentUser:62] - Members(id=61, point=Point(id=18, accumulatePoint=null, currentPoint=1500), permission=Permission(id=1, permission=USER), email=dvbf@naver.com, password=$2a$10$DZJBLvmOkHh.vzDnIa6cN.tq1adz3XS/HMEWKuI1tgiba/VeYPHVa, name=윤호상, tel=010-9677-7048, status=true, address=서울 노원구 덕릉로71길 30 105동 405호, postcode=01709, registerNumber=)
INFO  24-05-29 23:35:46 [http-nio-0.0.0.0-8000-exec-6] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTMzMjYsImV4cCI6MTcxNzA3OTcyNiwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImR2YmZAbmF2ZXIuY29tIn0.P_w00ZrQodUEv5tovsZZoOQ4z8IiFELNafblEEESqOI
INFO  24-05-29 23:35:46 [http-nio-0.0.0.0-8000-exec-6] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: dvbf@naver.com
INFO  24-05-29 23:35:46 [http-nio-0.0.0.0-8000-exec-6] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@48fa6ad5, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@6825d678]]
INFO  24-05-29 23:35:46 [http-nio-0.0.0.0-8000-exec-6] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 23:35:46 [http-nio-0.0.0.0-8000-exec-6] [TokenController-getCurrentUser:40] - Email: dvbf@naver.com
INFO  24-05-29 23:35:46 [http-nio-0.0.0.0-8000-exec-6] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 23:35:46 [http-nio-0.0.0.0-8000-exec-6] [TokenController-getCurrentUser:62] - Members(id=61, point=Point(id=18, accumulatePoint=null, currentPoint=1500), permission=Permission(id=1, permission=USER), email=dvbf@naver.com, password=$2a$10$DZJBLvmOkHh.vzDnIa6cN.tq1adz3XS/HMEWKuI1tgiba/VeYPHVa, name=윤호상, tel=010-9677-7048, status=true, address=서울 노원구 덕릉로71길 30 105동 405호, postcode=01709, registerNumber=)
INFO  24-05-29 23:35:46 [http-nio-0.0.0.0-8000-exec-4] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTMzMjYsImV4cCI6MTcxNzA3OTcyNiwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImR2YmZAbmF2ZXIuY29tIn0.P_w00ZrQodUEv5tovsZZoOQ4z8IiFELNafblEEESqOI
INFO  24-05-29 23:35:46 [http-nio-0.0.0.0-8000-exec-4] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: dvbf@naver.com
INFO  24-05-29 23:35:46 [http-nio-0.0.0.0-8000-exec-4] [UserManageController-getUserData:189] - dvbf@naver.com get 요청
INFO  24-05-29 23:35:47 [http-nio-0.0.0.0-8000-exec-8] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTMzMjYsImV4cCI6MTcxNzA3OTcyNiwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImR2YmZAbmF2ZXIuY29tIn0.P_w00ZrQodUEv5tovsZZoOQ4z8IiFELNafblEEESqOI
INFO  24-05-29 23:35:47 [http-nio-0.0.0.0-8000-exec-8] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: dvbf@naver.com
INFO  24-05-29 23:35:47 [http-nio-0.0.0.0-8000-exec-8] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@4b4e5a25, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@4727592]]
INFO  24-05-29 23:35:47 [http-nio-0.0.0.0-8000-exec-8] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 23:35:47 [http-nio-0.0.0.0-8000-exec-8] [TokenController-getCurrentUser:40] - Email: dvbf@naver.com
INFO  24-05-29 23:35:47 [http-nio-0.0.0.0-8000-exec-8] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 23:35:47 [http-nio-0.0.0.0-8000-exec-8] [TokenController-getCurrentUser:62] - Members(id=61, point=Point(id=18, accumulatePoint=null, currentPoint=1500), permission=Permission(id=1, permission=USER), email=dvbf@naver.com, password=$2a$10$DZJBLvmOkHh.vzDnIa6cN.tq1adz3XS/HMEWKuI1tgiba/VeYPHVa, name=윤호상, tel=010-9677-7048, status=true, address=서울 노원구 덕릉로71길 30 105동 405호, postcode=01709, registerNumber=)
INFO  24-05-29 23:35:47 [http-nio-0.0.0.0-8000-exec-1] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTMzMjYsImV4cCI6MTcxNzA3OTcyNiwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImR2YmZAbmF2ZXIuY29tIn0.P_w00ZrQodUEv5tovsZZoOQ4z8IiFELNafblEEESqOI
INFO  24-05-29 23:35:47 [http-nio-0.0.0.0-8000-exec-7] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTMzMjYsImV4cCI6MTcxNzA3OTcyNiwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImR2YmZAbmF2ZXIuY29tIn0.P_w00ZrQodUEv5tovsZZoOQ4z8IiFELNafblEEESqOI
INFO  24-05-29 23:35:47 [http-nio-0.0.0.0-8000-exec-9] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTMzMjYsImV4cCI6MTcxNzA3OTcyNiwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImR2YmZAbmF2ZXIuY29tIn0.P_w00ZrQodUEv5tovsZZoOQ4z8IiFELNafblEEESqOI
INFO  24-05-29 23:35:48 [http-nio-0.0.0.0-8000-exec-9] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: dvbf@naver.com
INFO  24-05-29 23:35:48 [http-nio-0.0.0.0-8000-exec-1] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: dvbf@naver.com
INFO  24-05-29 23:35:48 [http-nio-0.0.0.0-8000-exec-7] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: dvbf@naver.com
INFO  24-05-29 23:35:53 [http-nio-0.0.0.0-8000-exec-2] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTMzMjYsImV4cCI6MTcxNzA3OTcyNiwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImR2YmZAbmF2ZXIuY29tIn0.P_w00ZrQodUEv5tovsZZoOQ4z8IiFELNafblEEESqOI
INFO  24-05-29 23:35:53 [http-nio-0.0.0.0-8000-exec-2] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: dvbf@naver.com
INFO  24-05-29 23:35:53 [http-nio-0.0.0.0-8000-exec-2] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@3161623b, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@44e1f388]]
INFO  24-05-29 23:35:53 [http-nio-0.0.0.0-8000-exec-2] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 23:35:53 [http-nio-0.0.0.0-8000-exec-2] [TokenController-getCurrentUser:40] - Email: dvbf@naver.com
INFO  24-05-29 23:35:53 [http-nio-0.0.0.0-8000-exec-2] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 23:35:53 [http-nio-0.0.0.0-8000-exec-2] [TokenController-getCurrentUser:62] - Members(id=61, point=Point(id=18, accumulatePoint=null, currentPoint=1500), permission=Permission(id=1, permission=USER), email=dvbf@naver.com, password=$2a$10$DZJBLvmOkHh.vzDnIa6cN.tq1adz3XS/HMEWKuI1tgiba/VeYPHVa, name=윤호상, tel=010-9677-7048, status=true, address=서울 노원구 덕릉로71길 30 105동 405호, postcode=01709, registerNumber=)
INFO  24-05-29 23:35:53 [http-nio-0.0.0.0-8000-exec-10] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTMzMjYsImV4cCI6MTcxNzA3OTcyNiwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImR2YmZAbmF2ZXIuY29tIn0.P_w00ZrQodUEv5tovsZZoOQ4z8IiFELNafblEEESqOI
INFO  24-05-29 23:35:53 [http-nio-0.0.0.0-8000-exec-10] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: dvbf@naver.com
INFO  24-05-29 23:35:53 [http-nio-0.0.0.0-8000-exec-10] [UserManageController-getUserData:189] - dvbf@naver.com get 요청
INFO  24-05-29 23:35:54 [http-nio-0.0.0.0-8000-exec-5] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTMzMjYsImV4cCI6MTcxNzA3OTcyNiwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImR2YmZAbmF2ZXIuY29tIn0.P_w00ZrQodUEv5tovsZZoOQ4z8IiFELNafblEEESqOI
INFO  24-05-29 23:35:54 [http-nio-0.0.0.0-8000-exec-5] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: dvbf@naver.com
INFO  24-05-29 23:35:54 [http-nio-0.0.0.0-8000-exec-5] [UserManageController-logout:55] - Found refresh token in cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTMzMjYsImV4cCI6MTcxNzA3OTcyNiwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImR2YmZAbmF2ZXIuY29tIn0.P_w00ZrQodUEv5tovsZZoOQ4z8IiFELNafblEEESqOI
WARN  24-05-29 23:36:03 [http-nio-0.0.0.0-8000-exec-6] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
INFO  24-05-29 23:36:03 [http-nio-0.0.0.0-8000-exec-6] [UserManageController-postLogin:76] - 도착했는지 확인
INFO  24-05-29 23:36:03 [http-nio-0.0.0.0-8000-exec-6] [UserManageController-postLogin:77] - com.ssg.dsilbackend.dto.userManage.LoginDTO@7cab62e3
INFO  24-05-29 23:36:03 [http-nio-0.0.0.0-8000-exec-6] [UserManageController-postLogin:87] - JWT 토큰 생성 및 설정 완료
INFO  24-05-29 23:36:03 [http-nio-0.0.0.0-8000-exec-4] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTMzNjMsImV4cCI6MTcxNzA3OTc2Mywicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.x63_2IVsgOK3-l4GFHBFZ9qE6ipz24RakQ38hBF10uM
INFO  24-05-29 23:36:03 [http-nio-0.0.0.0-8000-exec-4] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 23:36:03 [http-nio-0.0.0.0-8000-exec-4] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@1240cba5, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@3b5270c1]]
INFO  24-05-29 23:36:03 [http-nio-0.0.0.0-8000-exec-4] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 23:36:03 [http-nio-0.0.0.0-8000-exec-4] [TokenController-getCurrentUser:40] - Email: hhh@naver.com
INFO  24-05-29 23:36:03 [http-nio-0.0.0.0-8000-exec-4] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 23:36:03 [http-nio-0.0.0.0-8000-exec-4] [TokenController-getCurrentUser:62] - Members(id=63, point=Point(id=20, accumulatePoint=-100, currentPoint=-100), permission=Permission(id=1, permission=USER), email=hhh@naver.com, password=$2a$10$ygLdbYPG9Gkuu38RQv71YOMKX.zXIilcOdWExl.VqYi2RNBrW2UQC, name=정휘제, tel=01065732265, status=true, address=서울시 우리집, postcode=123456, registerNumber=)
INFO  24-05-29 23:36:03 [http-nio-0.0.0.0-8000-exec-4] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTMzNjMsImV4cCI6MTcxNzA3OTc2Mywicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.x63_2IVsgOK3-l4GFHBFZ9qE6ipz24RakQ38hBF10uM
INFO  24-05-29 23:36:03 [http-nio-0.0.0.0-8000-exec-4] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 23:36:03 [http-nio-0.0.0.0-8000-exec-8] [JWTFilter-doFilterInternal:46] - Access token from header: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTMzNjMsImV4cCI6MTcxNjk5Mzk2Mywicm9sZSI6IlVTRVIiLCJuYW1lIjoi7KCV7ZyY7KCcIiwiY2F0ZWdvcnkiOiJhY2Nlc3MiLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.toWBVSlbQ47mMQv_YGkHbeq3wOngBI3f4Lh-yjUsRmg
INFO  24-05-29 23:36:03 [http-nio-0.0.0.0-8000-exec-9] [JWTFilter-doFilterInternal:46] - Access token from header: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTMzNjMsImV4cCI6MTcxNjk5Mzk2Mywicm9sZSI6IlVTRVIiLCJuYW1lIjoi7KCV7ZyY7KCcIiwiY2F0ZWdvcnkiOiJhY2Nlc3MiLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.toWBVSlbQ47mMQv_YGkHbeq3wOngBI3f4Lh-yjUsRmg
INFO  24-05-29 23:36:03 [http-nio-0.0.0.0-8000-exec-4] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@70e0115, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@1f97ceda]]
INFO  24-05-29 23:36:03 [http-nio-0.0.0.0-8000-exec-4] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 23:36:03 [http-nio-0.0.0.0-8000-exec-4] [TokenController-getCurrentUser:40] - Email: hhh@naver.com
INFO  24-05-29 23:36:03 [http-nio-0.0.0.0-8000-exec-4] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 23:36:03 [http-nio-0.0.0.0-8000-exec-1] [JWTFilter-doFilterInternal:46] - Access token from header: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTMzNjMsImV4cCI6MTcxNjk5Mzk2Mywicm9sZSI6IlVTRVIiLCJuYW1lIjoi7KCV7ZyY7KCcIiwiY2F0ZWdvcnkiOiJhY2Nlc3MiLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.toWBVSlbQ47mMQv_YGkHbeq3wOngBI3f4Lh-yjUsRmg
INFO  24-05-29 23:36:03 [http-nio-0.0.0.0-8000-exec-9] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 23:36:03 [http-nio-0.0.0.0-8000-exec-8] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 23:36:03 [http-nio-0.0.0.0-8000-exec-1] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 23:36:03 [http-nio-0.0.0.0-8000-exec-4] [TokenController-getCurrentUser:62] - Members(id=63, point=Point(id=20, accumulatePoint=-100, currentPoint=-100), permission=Permission(id=1, permission=USER), email=hhh@naver.com, password=$2a$10$ygLdbYPG9Gkuu38RQv71YOMKX.zXIilcOdWExl.VqYi2RNBrW2UQC, name=정휘제, tel=01065732265, status=true, address=서울시 우리집, postcode=123456, registerNumber=)
INFO  24-05-29 23:36:09 [http-nio-0.0.0.0-8000-exec-7] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTMzNjMsImV4cCI6MTcxNzA3OTc2Mywicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.x63_2IVsgOK3-l4GFHBFZ9qE6ipz24RakQ38hBF10uM
INFO  24-05-29 23:36:09 [http-nio-0.0.0.0-8000-exec-7] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 23:36:09 [http-nio-0.0.0.0-8000-exec-7] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@7776d86b, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@13847c3c]]
INFO  24-05-29 23:36:09 [http-nio-0.0.0.0-8000-exec-7] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 23:36:09 [http-nio-0.0.0.0-8000-exec-7] [TokenController-getCurrentUser:40] - Email: hhh@naver.com
INFO  24-05-29 23:36:09 [http-nio-0.0.0.0-8000-exec-7] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 23:36:09 [http-nio-0.0.0.0-8000-exec-7] [TokenController-getCurrentUser:62] - Members(id=63, point=Point(id=20, accumulatePoint=-100, currentPoint=-100), permission=Permission(id=1, permission=USER), email=hhh@naver.com, password=$2a$10$ygLdbYPG9Gkuu38RQv71YOMKX.zXIilcOdWExl.VqYi2RNBrW2UQC, name=정휘제, tel=01065732265, status=true, address=서울시 우리집, postcode=123456, registerNumber=)
INFO  24-05-29 23:36:09 [http-nio-0.0.0.0-8000-exec-2] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTMzNjMsImV4cCI6MTcxNzA3OTc2Mywicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.x63_2IVsgOK3-l4GFHBFZ9qE6ipz24RakQ38hBF10uM
INFO  24-05-29 23:36:09 [http-nio-0.0.0.0-8000-exec-2] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 23:36:09 [http-nio-0.0.0.0-8000-exec-2] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@e4a675d, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@7b00415d]]
INFO  24-05-29 23:36:09 [http-nio-0.0.0.0-8000-exec-2] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 23:36:09 [http-nio-0.0.0.0-8000-exec-2] [TokenController-getCurrentUser:40] - Email: hhh@naver.com
INFO  24-05-29 23:36:09 [http-nio-0.0.0.0-8000-exec-2] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 23:36:09 [http-nio-0.0.0.0-8000-exec-2] [TokenController-getCurrentUser:62] - Members(id=63, point=Point(id=20, accumulatePoint=-100, currentPoint=-100), permission=Permission(id=1, permission=USER), email=hhh@naver.com, password=$2a$10$ygLdbYPG9Gkuu38RQv71YOMKX.zXIilcOdWExl.VqYi2RNBrW2UQC, name=정휘제, tel=01065732265, status=true, address=서울시 우리집, postcode=123456, registerNumber=)
INFO  24-05-29 23:36:09 [http-nio-0.0.0.0-8000-exec-3] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTMzNjMsImV4cCI6MTcxNzA3OTc2Mywicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.x63_2IVsgOK3-l4GFHBFZ9qE6ipz24RakQ38hBF10uM
INFO  24-05-29 23:36:09 [http-nio-0.0.0.0-8000-exec-3] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 23:36:09 [http-nio-0.0.0.0-8000-exec-3] [UserManageController-getUserData:189] - hhh@naver.com get 요청
INFO  24-05-29 23:36:11 [http-nio-0.0.0.0-8000-exec-5] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTMzNjMsImV4cCI6MTcxNzA3OTc2Mywicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.x63_2IVsgOK3-l4GFHBFZ9qE6ipz24RakQ38hBF10uM
INFO  24-05-29 23:36:11 [http-nio-0.0.0.0-8000-exec-5] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 23:36:11 [http-nio-0.0.0.0-8000-exec-5] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@81d35c8, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@71aaecc8]]
INFO  24-05-29 23:36:11 [http-nio-0.0.0.0-8000-exec-5] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 23:36:11 [http-nio-0.0.0.0-8000-exec-5] [TokenController-getCurrentUser:40] - Email: hhh@naver.com
INFO  24-05-29 23:36:11 [http-nio-0.0.0.0-8000-exec-5] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 23:36:11 [http-nio-0.0.0.0-8000-exec-5] [TokenController-getCurrentUser:62] - Members(id=63, point=Point(id=20, accumulatePoint=-100, currentPoint=-100), permission=Permission(id=1, permission=USER), email=hhh@naver.com, password=$2a$10$ygLdbYPG9Gkuu38RQv71YOMKX.zXIilcOdWExl.VqYi2RNBrW2UQC, name=정휘제, tel=01065732265, status=true, address=서울시 우리집, postcode=123456, registerNumber=)
INFO  24-05-29 23:36:11 [http-nio-0.0.0.0-8000-exec-1] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTMzNjMsImV4cCI6MTcxNzA3OTc2Mywicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.x63_2IVsgOK3-l4GFHBFZ9qE6ipz24RakQ38hBF10uM
INFO  24-05-29 23:36:11 [http-nio-0.0.0.0-8000-exec-7] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTMzNjMsImV4cCI6MTcxNzA3OTc2Mywicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.x63_2IVsgOK3-l4GFHBFZ9qE6ipz24RakQ38hBF10uM
INFO  24-05-29 23:36:11 [http-nio-0.0.0.0-8000-exec-8] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTMzNjMsImV4cCI6MTcxNzA3OTc2Mywicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.x63_2IVsgOK3-l4GFHBFZ9qE6ipz24RakQ38hBF10uM
INFO  24-05-29 23:36:11 [http-nio-0.0.0.0-8000-exec-7] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 23:36:11 [http-nio-0.0.0.0-8000-exec-1] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 23:36:11 [http-nio-0.0.0.0-8000-exec-8] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 23:36:19 [http-nio-0.0.0.0-8000-exec-2] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTMzNjMsImV4cCI6MTcxNzA3OTc2Mywicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.x63_2IVsgOK3-l4GFHBFZ9qE6ipz24RakQ38hBF10uM
INFO  24-05-29 23:36:19 [http-nio-0.0.0.0-8000-exec-2] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 23:36:19 [http-nio-0.0.0.0-8000-exec-2] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@2fb5ad37, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@7f1c7caa]]
INFO  24-05-29 23:36:19 [http-nio-0.0.0.0-8000-exec-2] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 23:36:19 [http-nio-0.0.0.0-8000-exec-2] [TokenController-getCurrentUser:40] - Email: hhh@naver.com
INFO  24-05-29 23:36:19 [http-nio-0.0.0.0-8000-exec-2] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 23:36:20 [http-nio-0.0.0.0-8000-exec-2] [TokenController-getCurrentUser:62] - Members(id=63, point=Point(id=20, accumulatePoint=-100, currentPoint=-100), permission=Permission(id=1, permission=USER), email=hhh@naver.com, password=$2a$10$ygLdbYPG9Gkuu38RQv71YOMKX.zXIilcOdWExl.VqYi2RNBrW2UQC, name=정휘제, tel=01065732265, status=true, address=서울시 우리집, postcode=123456, registerNumber=)
INFO  24-05-29 23:36:20 [http-nio-0.0.0.0-8000-exec-10] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTMzNjMsImV4cCI6MTcxNzA3OTc2Mywicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.x63_2IVsgOK3-l4GFHBFZ9qE6ipz24RakQ38hBF10uM
INFO  24-05-29 23:36:20 [http-nio-0.0.0.0-8000-exec-10] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 23:36:20 [http-nio-0.0.0.0-8000-exec-10] [UserManageController-getUserData:189] - hhh@naver.com get 요청
INFO  24-05-29 23:36:26 [http-nio-0.0.0.0-8000-exec-3] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTMzNjMsImV4cCI6MTcxNzA3OTc2Mywicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.x63_2IVsgOK3-l4GFHBFZ9qE6ipz24RakQ38hBF10uM
INFO  24-05-29 23:36:26 [http-nio-0.0.0.0-8000-exec-3] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 23:36:26 [http-nio-0.0.0.0-8000-exec-3] [UserManageController-logout:55] - Found refresh token in cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTMzNjMsImV4cCI6MTcxNzA3OTc2Mywicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.x63_2IVsgOK3-l4GFHBFZ9qE6ipz24RakQ38hBF10uM
WARN  24-05-29 23:36:26 [http-nio-0.0.0.0-8000-exec-5] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:36:26 [http-nio-0.0.0.0-8000-exec-4] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:36:26 [http-nio-0.0.0.0-8000-exec-4] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:36:26 [http-nio-0.0.0.0-8000-exec-6] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:36:26 [http-nio-0.0.0.0-8000-exec-6] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:36:26 [http-nio-0.0.0.0-8000-exec-9] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:36:26 [http-nio-0.0.0.0-8000-exec-9] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:36:26 [http-nio-0.0.0.0-8000-exec-7] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:36:26 [http-nio-0.0.0.0-8000-exec-7] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:36:26 [http-nio-0.0.0.0-8000-exec-8] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:36:26 [http-nio-0.0.0.0-8000-exec-8] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:36:26 [http-nio-0.0.0.0-8000-exec-1] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:36:26 [http-nio-0.0.0.0-8000-exec-1] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:36:26 [http-nio-0.0.0.0-8000-exec-2] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:36:26 [http-nio-0.0.0.0-8000-exec-2] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:36:26 [http-nio-0.0.0.0-8000-exec-10] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:36:26 [http-nio-0.0.0.0-8000-exec-10] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:36:26 [http-nio-0.0.0.0-8000-exec-3] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:36:26 [http-nio-0.0.0.0-8000-exec-3] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:36:26 [http-nio-0.0.0.0-8000-exec-5] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:36:26 [http-nio-0.0.0.0-8000-exec-5] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:36:26 [http-nio-0.0.0.0-8000-exec-4] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:36:26 [http-nio-0.0.0.0-8000-exec-4] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:36:26 [http-nio-0.0.0.0-8000-exec-6] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:36:26 [http-nio-0.0.0.0-8000-exec-6] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:36:26 [http-nio-0.0.0.0-8000-exec-9] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:36:26 [http-nio-0.0.0.0-8000-exec-9] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:36:26 [http-nio-0.0.0.0-8000-exec-7] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:36:26 [http-nio-0.0.0.0-8000-exec-7] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:36:26 [http-nio-0.0.0.0-8000-exec-8] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:36:26 [http-nio-0.0.0.0-8000-exec-8] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:36:26 [http-nio-0.0.0.0-8000-exec-1] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:36:26 [http-nio-0.0.0.0-8000-exec-1] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:36:26 [http-nio-0.0.0.0-8000-exec-2] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:36:26 [http-nio-0.0.0.0-8000-exec-2] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:36:26 [http-nio-0.0.0.0-8000-exec-10] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:36:26 [http-nio-0.0.0.0-8000-exec-10] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:36:26 [http-nio-0.0.0.0-8000-exec-3] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:36:26 [http-nio-0.0.0.0-8000-exec-3] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:36:26 [http-nio-0.0.0.0-8000-exec-5] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:36:26 [http-nio-0.0.0.0-8000-exec-5] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:38:50 [http-nio-0.0.0.0-8000-exec-2] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:38:50 [http-nio-0.0.0.0-8000-exec-10] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:39:32 [http-nio-0.0.0.0-8000-exec-3] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
INFO  24-05-29 23:39:32 [http-nio-0.0.0.0-8000-exec-3] [UserManageController-postLogin:76] - 도착했는지 확인
INFO  24-05-29 23:39:32 [http-nio-0.0.0.0-8000-exec-3] [UserManageController-postLogin:77] - com.ssg.dsilbackend.dto.userManage.LoginDTO@284ef2a9
INFO  24-05-29 23:39:32 [http-nio-0.0.0.0-8000-exec-3] [UserManageController-postLogin:87] - JWT 토큰 생성 및 설정 완료
INFO  24-05-29 23:39:32 [http-nio-0.0.0.0-8000-exec-3] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTM1NzIsImV4cCI6MTcxNzA3OTk3Miwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.0PYMEgt-TQm2hfz-8Z1edKlh6DzBEI0RasQmEZeQRpY
INFO  24-05-29 23:39:32 [http-nio-0.0.0.0-8000-exec-3] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 23:39:32 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@c378b6b, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@56724190]]
INFO  24-05-29 23:39:32 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 23:39:32 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:40] - Email: hhh@naver.com
INFO  24-05-29 23:39:32 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 23:39:32 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:62] - Members(id=63, point=Point(id=20, accumulatePoint=-100, currentPoint=-100), permission=Permission(id=1, permission=USER), email=hhh@naver.com, password=$2a$10$ygLdbYPG9Gkuu38RQv71YOMKX.zXIilcOdWExl.VqYi2RNBrW2UQC, name=정휘제, tel=01065732265, status=true, address=서울시 우리집, postcode=123456, registerNumber=)
INFO  24-05-29 23:39:32 [http-nio-0.0.0.0-8000-exec-5] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTM1NzIsImV4cCI6MTcxNzA3OTk3Miwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.0PYMEgt-TQm2hfz-8Z1edKlh6DzBEI0RasQmEZeQRpY
INFO  24-05-29 23:39:32 [http-nio-0.0.0.0-8000-exec-5] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 23:39:32 [http-nio-0.0.0.0-8000-exec-5] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@45424cc7, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@30452dd2]]
INFO  24-05-29 23:39:32 [http-nio-0.0.0.0-8000-exec-5] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 23:39:32 [http-nio-0.0.0.0-8000-exec-5] [TokenController-getCurrentUser:40] - Email: hhh@naver.com
INFO  24-05-29 23:39:32 [http-nio-0.0.0.0-8000-exec-5] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 23:39:32 [http-nio-0.0.0.0-8000-exec-6] [JWTFilter-doFilterInternal:46] - Access token from header: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTM1NzIsImV4cCI6MTcxNjk5NDE3Miwicm9sZSI6IlVTRVIiLCJuYW1lIjoi7KCV7ZyY7KCcIiwiY2F0ZWdvcnkiOiJhY2Nlc3MiLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.0LWbAWJFFqNTaPJqnZ6--Z6bOMCMG3MubTk14j8YuTs
INFO  24-05-29 23:39:32 [http-nio-0.0.0.0-8000-exec-9] [JWTFilter-doFilterInternal:46] - Access token from header: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTM1NzIsImV4cCI6MTcxNjk5NDE3Miwicm9sZSI6IlVTRVIiLCJuYW1lIjoi7KCV7ZyY7KCcIiwiY2F0ZWdvcnkiOiJhY2Nlc3MiLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.0LWbAWJFFqNTaPJqnZ6--Z6bOMCMG3MubTk14j8YuTs
INFO  24-05-29 23:39:33 [http-nio-0.0.0.0-8000-exec-5] [TokenController-getCurrentUser:62] - Members(id=63, point=Point(id=20, accumulatePoint=-100, currentPoint=-100), permission=Permission(id=1, permission=USER), email=hhh@naver.com, password=$2a$10$ygLdbYPG9Gkuu38RQv71YOMKX.zXIilcOdWExl.VqYi2RNBrW2UQC, name=정휘제, tel=01065732265, status=true, address=서울시 우리집, postcode=123456, registerNumber=)
INFO  24-05-29 23:39:33 [http-nio-0.0.0.0-8000-exec-6] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 23:39:33 [http-nio-0.0.0.0-8000-exec-4] [JWTFilter-doFilterInternal:46] - Access token from header: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTM1NzIsImV4cCI6MTcxNjk5NDE3Miwicm9sZSI6IlVTRVIiLCJuYW1lIjoi7KCV7ZyY7KCcIiwiY2F0ZWdvcnkiOiJhY2Nlc3MiLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.0LWbAWJFFqNTaPJqnZ6--Z6bOMCMG3MubTk14j8YuTs
INFO  24-05-29 23:39:33 [http-nio-0.0.0.0-8000-exec-9] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 23:39:33 [http-nio-0.0.0.0-8000-exec-4] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 23:39:39 [http-nio-0.0.0.0-8000-exec-7] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTM1NzIsImV4cCI6MTcxNzA3OTk3Miwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.0PYMEgt-TQm2hfz-8Z1edKlh6DzBEI0RasQmEZeQRpY
INFO  24-05-29 23:39:39 [http-nio-0.0.0.0-8000-exec-7] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 23:39:39 [http-nio-0.0.0.0-8000-exec-7] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@56c272c1, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@7fdff1c9]]
INFO  24-05-29 23:39:39 [http-nio-0.0.0.0-8000-exec-7] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 23:39:39 [http-nio-0.0.0.0-8000-exec-7] [TokenController-getCurrentUser:40] - Email: hhh@naver.com
INFO  24-05-29 23:39:39 [http-nio-0.0.0.0-8000-exec-7] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 23:39:39 [http-nio-0.0.0.0-8000-exec-7] [TokenController-getCurrentUser:62] - Members(id=63, point=Point(id=20, accumulatePoint=-100, currentPoint=-100), permission=Permission(id=1, permission=USER), email=hhh@naver.com, password=$2a$10$ygLdbYPG9Gkuu38RQv71YOMKX.zXIilcOdWExl.VqYi2RNBrW2UQC, name=정휘제, tel=01065732265, status=true, address=서울시 우리집, postcode=123456, registerNumber=)
INFO  24-05-29 23:39:39 [http-nio-0.0.0.0-8000-exec-7] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTM1NzIsImV4cCI6MTcxNzA3OTk3Miwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.0PYMEgt-TQm2hfz-8Z1edKlh6DzBEI0RasQmEZeQRpY
INFO  24-05-29 23:39:39 [http-nio-0.0.0.0-8000-exec-7] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 23:39:39 [http-nio-0.0.0.0-8000-exec-7] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@32f72612, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@3b61e4aa]]
INFO  24-05-29 23:39:39 [http-nio-0.0.0.0-8000-exec-7] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 23:39:39 [http-nio-0.0.0.0-8000-exec-7] [TokenController-getCurrentUser:40] - Email: hhh@naver.com
INFO  24-05-29 23:39:39 [http-nio-0.0.0.0-8000-exec-7] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 23:39:39 [http-nio-0.0.0.0-8000-exec-7] [TokenController-getCurrentUser:62] - Members(id=63, point=Point(id=20, accumulatePoint=-100, currentPoint=-100), permission=Permission(id=1, permission=USER), email=hhh@naver.com, password=$2a$10$ygLdbYPG9Gkuu38RQv71YOMKX.zXIilcOdWExl.VqYi2RNBrW2UQC, name=정휘제, tel=01065732265, status=true, address=서울시 우리집, postcode=123456, registerNumber=)
INFO  24-05-29 23:39:39 [http-nio-0.0.0.0-8000-exec-1] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTM1NzIsImV4cCI6MTcxNzA3OTk3Miwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.0PYMEgt-TQm2hfz-8Z1edKlh6DzBEI0RasQmEZeQRpY
INFO  24-05-29 23:39:39 [http-nio-0.0.0.0-8000-exec-1] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 23:39:39 [http-nio-0.0.0.0-8000-exec-1] [UserManageController-getUserData:189] - hhh@naver.com get 요청
INFO  24-05-29 23:39:49 [http-nio-0.0.0.0-8000-exec-2] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTM1NzIsImV4cCI6MTcxNzA3OTk3Miwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.0PYMEgt-TQm2hfz-8Z1edKlh6DzBEI0RasQmEZeQRpY
INFO  24-05-29 23:39:49 [http-nio-0.0.0.0-8000-exec-2] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 23:39:49 [http-nio-0.0.0.0-8000-exec-2] [UserManageController-logout:55] - Found refresh token in cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTM1NzIsImV4cCI6MTcxNzA3OTk3Miwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.0PYMEgt-TQm2hfz-8Z1edKlh6DzBEI0RasQmEZeQRpY
WARN  24-05-29 23:39:49 [http-nio-0.0.0.0-8000-exec-10] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:39:49 [http-nio-0.0.0.0-8000-exec-3] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:39:49 [http-nio-0.0.0.0-8000-exec-3] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:39:49 [http-nio-0.0.0.0-8000-exec-5] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:39:49 [http-nio-0.0.0.0-8000-exec-5] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:39:49 [http-nio-0.0.0.0-8000-exec-6] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:39:49 [http-nio-0.0.0.0-8000-exec-6] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:39:49 [http-nio-0.0.0.0-8000-exec-9] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:39:49 [http-nio-0.0.0.0-8000-exec-9] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:39:49 [http-nio-0.0.0.0-8000-exec-4] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:39:49 [http-nio-0.0.0.0-8000-exec-4] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:39:49 [http-nio-0.0.0.0-8000-exec-8] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:39:49 [http-nio-0.0.0.0-8000-exec-8] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:39:49 [http-nio-0.0.0.0-8000-exec-7] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:39:49 [http-nio-0.0.0.0-8000-exec-7] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:39:49 [http-nio-0.0.0.0-8000-exec-1] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:39:49 [http-nio-0.0.0.0-8000-exec-1] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:39:49 [http-nio-0.0.0.0-8000-exec-2] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:39:49 [http-nio-0.0.0.0-8000-exec-2] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:39:49 [http-nio-0.0.0.0-8000-exec-10] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:39:49 [http-nio-0.0.0.0-8000-exec-10] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:39:50 [http-nio-0.0.0.0-8000-exec-3] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:39:50 [http-nio-0.0.0.0-8000-exec-3] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:39:50 [http-nio-0.0.0.0-8000-exec-5] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:39:50 [http-nio-0.0.0.0-8000-exec-5] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:39:50 [http-nio-0.0.0.0-8000-exec-6] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:39:50 [http-nio-0.0.0.0-8000-exec-6] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:39:50 [http-nio-0.0.0.0-8000-exec-9] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:39:50 [http-nio-0.0.0.0-8000-exec-9] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:39:50 [http-nio-0.0.0.0-8000-exec-4] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:39:50 [http-nio-0.0.0.0-8000-exec-4] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:39:50 [http-nio-0.0.0.0-8000-exec-8] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:39:50 [http-nio-0.0.0.0-8000-exec-8] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:39:50 [http-nio-0.0.0.0-8000-exec-7] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:39:50 [http-nio-0.0.0.0-8000-exec-7] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:39:50 [http-nio-0.0.0.0-8000-exec-1] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:39:50 [http-nio-0.0.0.0-8000-exec-1] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:39:50 [http-nio-0.0.0.0-8000-exec-2] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:39:50 [http-nio-0.0.0.0-8000-exec-2] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:39:50 [http-nio-0.0.0.0-8000-exec-10] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:39:50 [http-nio-0.0.0.0-8000-exec-10] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:40:23 [http-nio-0.0.0.0-8000-exec-3] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:40:23 [http-nio-0.0.0.0-8000-exec-5] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:40:43 [http-nio-0.0.0.0-8000-exec-9] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
INFO  24-05-29 23:40:43 [http-nio-0.0.0.0-8000-exec-9] [UserManageController-postLogin:76] - 도착했는지 확인
INFO  24-05-29 23:40:43 [http-nio-0.0.0.0-8000-exec-9] [UserManageController-postLogin:77] - com.ssg.dsilbackend.dto.userManage.LoginDTO@434cfcec
INFO  24-05-29 23:40:43 [http-nio-0.0.0.0-8000-exec-9] [UserManageController-postLogin:87] - JWT 토큰 생성 및 설정 완료
INFO  24-05-29 23:40:43 [http-nio-0.0.0.0-8000-exec-4] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTM2NDMsImV4cCI6MTcxNzA4MDA0Mywicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.V5eqho1OqHLSIgvexXHVghZKqupiQRid3ZwgeLtL2aU
INFO  24-05-29 23:40:43 [http-nio-0.0.0.0-8000-exec-4] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 23:40:43 [http-nio-0.0.0.0-8000-exec-4] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@5064aa50, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@3a470f10]]
INFO  24-05-29 23:40:43 [http-nio-0.0.0.0-8000-exec-4] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 23:40:43 [http-nio-0.0.0.0-8000-exec-4] [TokenController-getCurrentUser:40] - Email: hhh@naver.com
INFO  24-05-29 23:40:43 [http-nio-0.0.0.0-8000-exec-4] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 23:40:43 [http-nio-0.0.0.0-8000-exec-4] [TokenController-getCurrentUser:62] - Members(id=63, point=Point(id=20, accumulatePoint=-100, currentPoint=-100), permission=Permission(id=1, permission=USER), email=hhh@naver.com, password=$2a$10$ygLdbYPG9Gkuu38RQv71YOMKX.zXIilcOdWExl.VqYi2RNBrW2UQC, name=정휘제, tel=01065732265, status=true, address=서울시 우리집, postcode=123456, registerNumber=)
INFO  24-05-29 23:40:43 [http-nio-0.0.0.0-8000-exec-8] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTM2NDMsImV4cCI6MTcxNzA4MDA0Mywicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.V5eqho1OqHLSIgvexXHVghZKqupiQRid3ZwgeLtL2aU
INFO  24-05-29 23:40:43 [http-nio-0.0.0.0-8000-exec-8] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 23:40:43 [http-nio-0.0.0.0-8000-exec-8] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@77454aeb, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@5959f6df]]
INFO  24-05-29 23:40:43 [http-nio-0.0.0.0-8000-exec-8] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 23:40:43 [http-nio-0.0.0.0-8000-exec-8] [TokenController-getCurrentUser:40] - Email: hhh@naver.com
INFO  24-05-29 23:40:43 [http-nio-0.0.0.0-8000-exec-8] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 23:40:43 [http-nio-0.0.0.0-8000-exec-8] [TokenController-getCurrentUser:62] - Members(id=63, point=Point(id=20, accumulatePoint=-100, currentPoint=-100), permission=Permission(id=1, permission=USER), email=hhh@naver.com, password=$2a$10$ygLdbYPG9Gkuu38RQv71YOMKX.zXIilcOdWExl.VqYi2RNBrW2UQC, name=정휘제, tel=01065732265, status=true, address=서울시 우리집, postcode=123456, registerNumber=)
INFO  24-05-29 23:40:43 [http-nio-0.0.0.0-8000-exec-7] [JWTFilter-doFilterInternal:46] - Access token from header: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTM2NDMsImV4cCI6MTcxNjk5NDI0Mywicm9sZSI6IlVTRVIiLCJuYW1lIjoi7KCV7ZyY7KCcIiwiY2F0ZWdvcnkiOiJhY2Nlc3MiLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.ydge3_PiTIFQ1EYMUZHFNi3c5zfjnbh1zW4w1ZhuMmw
INFO  24-05-29 23:40:43 [http-nio-0.0.0.0-8000-exec-1] [JWTFilter-doFilterInternal:46] - Access token from header: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTM2NDMsImV4cCI6MTcxNjk5NDI0Mywicm9sZSI6IlVTRVIiLCJuYW1lIjoi7KCV7ZyY7KCcIiwiY2F0ZWdvcnkiOiJhY2Nlc3MiLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.ydge3_PiTIFQ1EYMUZHFNi3c5zfjnbh1zW4w1ZhuMmw
INFO  24-05-29 23:40:43 [http-nio-0.0.0.0-8000-exec-2] [JWTFilter-doFilterInternal:46] - Access token from header: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTM2NDMsImV4cCI6MTcxNjk5NDI0Mywicm9sZSI6IlVTRVIiLCJuYW1lIjoi7KCV7ZyY7KCcIiwiY2F0ZWdvcnkiOiJhY2Nlc3MiLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.ydge3_PiTIFQ1EYMUZHFNi3c5zfjnbh1zW4w1ZhuMmw
INFO  24-05-29 23:40:43 [http-nio-0.0.0.0-8000-exec-7] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 23:40:43 [http-nio-0.0.0.0-8000-exec-2] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 23:40:43 [http-nio-0.0.0.0-8000-exec-1] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 23:41:23 [http-nio-0.0.0.0-8000-exec-10] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTM2NDMsImV4cCI6MTcxNzA4MDA0Mywicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.V5eqho1OqHLSIgvexXHVghZKqupiQRid3ZwgeLtL2aU
INFO  24-05-29 23:41:23 [http-nio-0.0.0.0-8000-exec-10] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 23:41:23 [http-nio-0.0.0.0-8000-exec-10] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@6f37c62c, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@40a6b341]]
INFO  24-05-29 23:41:23 [http-nio-0.0.0.0-8000-exec-10] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 23:41:23 [http-nio-0.0.0.0-8000-exec-10] [TokenController-getCurrentUser:40] - Email: hhh@naver.com
INFO  24-05-29 23:41:23 [http-nio-0.0.0.0-8000-exec-10] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 23:41:23 [http-nio-0.0.0.0-8000-exec-10] [TokenController-getCurrentUser:62] - Members(id=63, point=Point(id=20, accumulatePoint=-100, currentPoint=-100), permission=Permission(id=1, permission=USER), email=hhh@naver.com, password=$2a$10$ygLdbYPG9Gkuu38RQv71YOMKX.zXIilcOdWExl.VqYi2RNBrW2UQC, name=정휘제, tel=01065732265, status=true, address=서울시 우리집, postcode=123456, registerNumber=)
INFO  24-05-29 23:41:23 [http-nio-0.0.0.0-8000-exec-3] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTM2NDMsImV4cCI6MTcxNzA4MDA0Mywicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.V5eqho1OqHLSIgvexXHVghZKqupiQRid3ZwgeLtL2aU
INFO  24-05-29 23:41:23 [http-nio-0.0.0.0-8000-exec-3] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 23:41:23 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@636a866f, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@54e76af1]]
INFO  24-05-29 23:41:23 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 23:41:23 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:40] - Email: hhh@naver.com
INFO  24-05-29 23:41:23 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 23:41:23 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:62] - Members(id=63, point=Point(id=20, accumulatePoint=-100, currentPoint=-100), permission=Permission(id=1, permission=USER), email=hhh@naver.com, password=$2a$10$ygLdbYPG9Gkuu38RQv71YOMKX.zXIilcOdWExl.VqYi2RNBrW2UQC, name=정휘제, tel=01065732265, status=true, address=서울시 우리집, postcode=123456, registerNumber=)
INFO  24-05-29 23:41:23 [http-nio-0.0.0.0-8000-exec-5] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTM2NDMsImV4cCI6MTcxNzA4MDA0Mywicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.V5eqho1OqHLSIgvexXHVghZKqupiQRid3ZwgeLtL2aU
INFO  24-05-29 23:41:23 [http-nio-0.0.0.0-8000-exec-5] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 23:41:23 [http-nio-0.0.0.0-8000-exec-5] [UserManageController-getUserData:189] - hhh@naver.com get 요청
INFO  24-05-29 23:41:40 [http-nio-0.0.0.0-8000-exec-6] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTM2NDMsImV4cCI6MTcxNzA4MDA0Mywicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.V5eqho1OqHLSIgvexXHVghZKqupiQRid3ZwgeLtL2aU
INFO  24-05-29 23:41:40 [http-nio-0.0.0.0-8000-exec-6] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 23:41:40 [http-nio-0.0.0.0-8000-exec-6] [UserManageController-logout:55] - Found refresh token in cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTM2NDMsImV4cCI6MTcxNzA4MDA0Mywicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.V5eqho1OqHLSIgvexXHVghZKqupiQRid3ZwgeLtL2aU
WARN  24-05-29 23:41:40 [http-nio-0.0.0.0-8000-exec-9] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:41:40 [http-nio-0.0.0.0-8000-exec-4] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:41:40 [http-nio-0.0.0.0-8000-exec-4] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:41:40 [http-nio-0.0.0.0-8000-exec-8] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:41:40 [http-nio-0.0.0.0-8000-exec-8] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:41:40 [http-nio-0.0.0.0-8000-exec-7] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:41:40 [http-nio-0.0.0.0-8000-exec-7] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:41:40 [http-nio-0.0.0.0-8000-exec-2] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:41:40 [http-nio-0.0.0.0-8000-exec-2] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:41:40 [http-nio-0.0.0.0-8000-exec-1] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:41:40 [http-nio-0.0.0.0-8000-exec-1] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:41:40 [http-nio-0.0.0.0-8000-exec-10] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:41:40 [http-nio-0.0.0.0-8000-exec-10] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:41:40 [http-nio-0.0.0.0-8000-exec-3] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:41:40 [http-nio-0.0.0.0-8000-exec-3] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:41:40 [http-nio-0.0.0.0-8000-exec-5] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:41:40 [http-nio-0.0.0.0-8000-exec-5] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:41:40 [http-nio-0.0.0.0-8000-exec-6] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:41:40 [http-nio-0.0.0.0-8000-exec-6] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:41:40 [http-nio-0.0.0.0-8000-exec-9] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:41:40 [http-nio-0.0.0.0-8000-exec-9] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:41:40 [http-nio-0.0.0.0-8000-exec-4] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:41:40 [http-nio-0.0.0.0-8000-exec-4] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:41:40 [http-nio-0.0.0.0-8000-exec-8] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:41:40 [http-nio-0.0.0.0-8000-exec-8] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:41:40 [http-nio-0.0.0.0-8000-exec-7] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:41:40 [http-nio-0.0.0.0-8000-exec-7] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:41:40 [http-nio-0.0.0.0-8000-exec-2] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:41:40 [http-nio-0.0.0.0-8000-exec-2] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:41:40 [http-nio-0.0.0.0-8000-exec-1] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:41:40 [http-nio-0.0.0.0-8000-exec-1] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:41:40 [http-nio-0.0.0.0-8000-exec-10] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:41:40 [http-nio-0.0.0.0-8000-exec-10] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:41:40 [http-nio-0.0.0.0-8000-exec-3] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:41:40 [http-nio-0.0.0.0-8000-exec-3] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:41:40 [http-nio-0.0.0.0-8000-exec-5] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:41:40 [http-nio-0.0.0.0-8000-exec-5] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:41:40 [http-nio-0.0.0.0-8000-exec-6] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:41:40 [http-nio-0.0.0.0-8000-exec-6] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:41:40 [http-nio-0.0.0.0-8000-exec-9] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:41:40 [http-nio-0.0.0.0-8000-exec-9] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:42:36 [http-nio-0.0.0.0-8000-exec-7] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:42:36 [http-nio-0.0.0.0-8000-exec-2] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:42:41 [http-nio-0.0.0.0-8000-exec-1] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
INFO  24-05-29 23:42:41 [http-nio-0.0.0.0-8000-exec-1] [UserManageController-postLogin:76] - 도착했는지 확인
INFO  24-05-29 23:42:41 [http-nio-0.0.0.0-8000-exec-1] [UserManageController-postLogin:77] - com.ssg.dsilbackend.dto.userManage.LoginDTO@6d5e2de
INFO  24-05-29 23:42:41 [http-nio-0.0.0.0-8000-exec-1] [UserManageController-postLogin:87] - JWT 토큰 생성 및 설정 완료
INFO  24-05-29 23:42:41 [http-nio-0.0.0.0-8000-exec-5] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTM3NjEsImV4cCI6MTcxNzA4MDE2MSwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.e39HYJJhEDofqaOJv6iBDfuhv8FTBW7Ci6iOnB6XoTg
INFO  24-05-29 23:42:41 [http-nio-0.0.0.0-8000-exec-5] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 23:42:41 [http-nio-0.0.0.0-8000-exec-5] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@49cda3c3, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@4c0659b2]]
INFO  24-05-29 23:42:41 [http-nio-0.0.0.0-8000-exec-5] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 23:42:41 [http-nio-0.0.0.0-8000-exec-5] [TokenController-getCurrentUser:40] - Email: hhh@naver.com
INFO  24-05-29 23:42:41 [http-nio-0.0.0.0-8000-exec-5] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 23:42:41 [http-nio-0.0.0.0-8000-exec-5] [TokenController-getCurrentUser:62] - Members(id=63, point=Point(id=20, accumulatePoint=-100, currentPoint=-100), permission=Permission(id=1, permission=USER), email=hhh@naver.com, password=$2a$10$ygLdbYPG9Gkuu38RQv71YOMKX.zXIilcOdWExl.VqYi2RNBrW2UQC, name=정휘제, tel=01065732265, status=true, address=서울시 우리집, postcode=123456, registerNumber=)
INFO  24-05-29 23:42:41 [http-nio-0.0.0.0-8000-exec-6] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTM3NjEsImV4cCI6MTcxNzA4MDE2MSwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.e39HYJJhEDofqaOJv6iBDfuhv8FTBW7Ci6iOnB6XoTg
INFO  24-05-29 23:42:41 [http-nio-0.0.0.0-8000-exec-6] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 23:42:41 [http-nio-0.0.0.0-8000-exec-6] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@fd8bf0c, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@2e81410c]]
INFO  24-05-29 23:42:41 [http-nio-0.0.0.0-8000-exec-6] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 23:42:41 [http-nio-0.0.0.0-8000-exec-6] [TokenController-getCurrentUser:40] - Email: hhh@naver.com
INFO  24-05-29 23:42:41 [http-nio-0.0.0.0-8000-exec-6] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 23:42:41 [http-nio-0.0.0.0-8000-exec-6] [TokenController-getCurrentUser:62] - Members(id=63, point=Point(id=20, accumulatePoint=-100, currentPoint=-100), permission=Permission(id=1, permission=USER), email=hhh@naver.com, password=$2a$10$ygLdbYPG9Gkuu38RQv71YOMKX.zXIilcOdWExl.VqYi2RNBrW2UQC, name=정휘제, tel=01065732265, status=true, address=서울시 우리집, postcode=123456, registerNumber=)
INFO  24-05-29 23:42:42 [http-nio-0.0.0.0-8000-exec-9] [JWTFilter-doFilterInternal:46] - Access token from header: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTM3NjEsImV4cCI6MTcxNjk5NDM2MSwicm9sZSI6IlVTRVIiLCJuYW1lIjoi7KCV7ZyY7KCcIiwiY2F0ZWdvcnkiOiJhY2Nlc3MiLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.axFNHeNoUGFLypgBLH7hxMUz7NOU1NA2Zoq2bvabTRE
INFO  24-05-29 23:42:42 [http-nio-0.0.0.0-8000-exec-8] [JWTFilter-doFilterInternal:46] - Access token from header: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTM3NjEsImV4cCI6MTcxNjk5NDM2MSwicm9sZSI6IlVTRVIiLCJuYW1lIjoi7KCV7ZyY7KCcIiwiY2F0ZWdvcnkiOiJhY2Nlc3MiLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.axFNHeNoUGFLypgBLH7hxMUz7NOU1NA2Zoq2bvabTRE
INFO  24-05-29 23:42:42 [http-nio-0.0.0.0-8000-exec-4] [JWTFilter-doFilterInternal:46] - Access token from header: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTM3NjEsImV4cCI6MTcxNjk5NDM2MSwicm9sZSI6IlVTRVIiLCJuYW1lIjoi7KCV7ZyY7KCcIiwiY2F0ZWdvcnkiOiJhY2Nlc3MiLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.axFNHeNoUGFLypgBLH7hxMUz7NOU1NA2Zoq2bvabTRE
INFO  24-05-29 23:42:42 [http-nio-0.0.0.0-8000-exec-8] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 23:42:42 [http-nio-0.0.0.0-8000-exec-9] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 23:42:42 [http-nio-0.0.0.0-8000-exec-4] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 23:42:46 [http-nio-0.0.0.0-8000-exec-7] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTM3NjEsImV4cCI6MTcxNzA4MDE2MSwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.e39HYJJhEDofqaOJv6iBDfuhv8FTBW7Ci6iOnB6XoTg
INFO  24-05-29 23:42:46 [http-nio-0.0.0.0-8000-exec-7] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 23:42:47 [http-nio-0.0.0.0-8000-exec-7] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@68f435b7, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@1dacb3]]
INFO  24-05-29 23:42:47 [http-nio-0.0.0.0-8000-exec-7] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 23:42:47 [http-nio-0.0.0.0-8000-exec-7] [TokenController-getCurrentUser:40] - Email: hhh@naver.com
INFO  24-05-29 23:42:47 [http-nio-0.0.0.0-8000-exec-7] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 23:42:47 [http-nio-0.0.0.0-8000-exec-7] [TokenController-getCurrentUser:62] - Members(id=63, point=Point(id=20, accumulatePoint=-100, currentPoint=-100), permission=Permission(id=1, permission=USER), email=hhh@naver.com, password=$2a$10$ygLdbYPG9Gkuu38RQv71YOMKX.zXIilcOdWExl.VqYi2RNBrW2UQC, name=정휘제, tel=01065732265, status=true, address=서울시 우리집, postcode=123456, registerNumber=)
INFO  24-05-29 23:42:47 [http-nio-0.0.0.0-8000-exec-2] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTM3NjEsImV4cCI6MTcxNzA4MDE2MSwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.e39HYJJhEDofqaOJv6iBDfuhv8FTBW7Ci6iOnB6XoTg
INFO  24-05-29 23:42:47 [http-nio-0.0.0.0-8000-exec-2] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 23:42:47 [http-nio-0.0.0.0-8000-exec-2] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@227dded1, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@2b95ece]]
INFO  24-05-29 23:42:47 [http-nio-0.0.0.0-8000-exec-2] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 23:42:47 [http-nio-0.0.0.0-8000-exec-2] [TokenController-getCurrentUser:40] - Email: hhh@naver.com
INFO  24-05-29 23:42:47 [http-nio-0.0.0.0-8000-exec-2] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 23:42:47 [http-nio-0.0.0.0-8000-exec-2] [TokenController-getCurrentUser:62] - Members(id=63, point=Point(id=20, accumulatePoint=-100, currentPoint=-100), permission=Permission(id=1, permission=USER), email=hhh@naver.com, password=$2a$10$ygLdbYPG9Gkuu38RQv71YOMKX.zXIilcOdWExl.VqYi2RNBrW2UQC, name=정휘제, tel=01065732265, status=true, address=서울시 우리집, postcode=123456, registerNumber=)
INFO  24-05-29 23:42:47 [http-nio-0.0.0.0-8000-exec-1] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTM3NjEsImV4cCI6MTcxNzA4MDE2MSwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.e39HYJJhEDofqaOJv6iBDfuhv8FTBW7Ci6iOnB6XoTg
INFO  24-05-29 23:42:47 [http-nio-0.0.0.0-8000-exec-1] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 23:42:47 [http-nio-0.0.0.0-8000-exec-1] [UserManageController-getUserData:189] - hhh@naver.com get 요청
WARN  24-05-29 23:42:50 [http-nio-0.0.0.0-8000-exec-3] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:42:50 [http-nio-0.0.0.0-8000-exec-10] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:42:50 [http-nio-0.0.0.0-8000-exec-10] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:42:50 [http-nio-0.0.0.0-8000-exec-5] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:42:50 [http-nio-0.0.0.0-8000-exec-5] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:42:51 [http-nio-0.0.0.0-8000-exec-6] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:42:51 [http-nio-0.0.0.0-8000-exec-6] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:42:51 [http-nio-0.0.0.0-8000-exec-4] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:42:51 [http-nio-0.0.0.0-8000-exec-4] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:42:51 [http-nio-0.0.0.0-8000-exec-9] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:42:51 [http-nio-0.0.0.0-8000-exec-9] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:42:51 [http-nio-0.0.0.0-8000-exec-8] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:42:51 [http-nio-0.0.0.0-8000-exec-8] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:42:51 [http-nio-0.0.0.0-8000-exec-7] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:42:51 [http-nio-0.0.0.0-8000-exec-7] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:42:51 [http-nio-0.0.0.0-8000-exec-2] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:42:51 [http-nio-0.0.0.0-8000-exec-2] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:42:51 [http-nio-0.0.0.0-8000-exec-1] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:42:51 [http-nio-0.0.0.0-8000-exec-1] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:42:51 [http-nio-0.0.0.0-8000-exec-3] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:42:51 [http-nio-0.0.0.0-8000-exec-3] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:42:51 [http-nio-0.0.0.0-8000-exec-10] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:42:51 [http-nio-0.0.0.0-8000-exec-10] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:42:51 [http-nio-0.0.0.0-8000-exec-5] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:42:51 [http-nio-0.0.0.0-8000-exec-5] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:42:51 [http-nio-0.0.0.0-8000-exec-6] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:42:51 [http-nio-0.0.0.0-8000-exec-6] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:42:51 [http-nio-0.0.0.0-8000-exec-4] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:42:51 [http-nio-0.0.0.0-8000-exec-4] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:42:51 [http-nio-0.0.0.0-8000-exec-9] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:42:51 [http-nio-0.0.0.0-8000-exec-9] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:42:51 [http-nio-0.0.0.0-8000-exec-8] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:42:51 [http-nio-0.0.0.0-8000-exec-8] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:42:51 [http-nio-0.0.0.0-8000-exec-7] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:42:51 [http-nio-0.0.0.0-8000-exec-7] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:42:51 [http-nio-0.0.0.0-8000-exec-2] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:42:51 [http-nio-0.0.0.0-8000-exec-2] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:42:51 [http-nio-0.0.0.0-8000-exec-1] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:42:51 [http-nio-0.0.0.0-8000-exec-1] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:42:51 [http-nio-0.0.0.0-8000-exec-3] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:42:51 [http-nio-0.0.0.0-8000-exec-3] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
INFO  24-05-29 23:42:52 [http-nio-0.0.0.0-8000-exec-5] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTM3NjEsImV4cCI6MTcxNzA4MDE2MSwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.e39HYJJhEDofqaOJv6iBDfuhv8FTBW7Ci6iOnB6XoTg
INFO  24-05-29 23:42:52 [http-nio-0.0.0.0-8000-exec-10] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTM3NjEsImV4cCI6MTcxNzA4MDE2MSwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.e39HYJJhEDofqaOJv6iBDfuhv8FTBW7Ci6iOnB6XoTg
INFO  24-05-29 23:42:52 [http-nio-0.0.0.0-8000-exec-5] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 23:42:52 [http-nio-0.0.0.0-8000-exec-10] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 23:42:52 [http-nio-0.0.0.0-8000-exec-10] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@7dafec1b, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@72588f6d]]
INFO  24-05-29 23:42:52 [http-nio-0.0.0.0-8000-exec-5] [UserManageController-logout:55] - Found refresh token in cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTM3NjEsImV4cCI6MTcxNzA4MDE2MSwicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.e39HYJJhEDofqaOJv6iBDfuhv8FTBW7Ci6iOnB6XoTg
INFO  24-05-29 23:42:52 [http-nio-0.0.0.0-8000-exec-10] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 23:42:52 [http-nio-0.0.0.0-8000-exec-10] [TokenController-getCurrentUser:40] - Email: hhh@naver.com
INFO  24-05-29 23:42:52 [http-nio-0.0.0.0-8000-exec-10] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 23:42:52 [http-nio-0.0.0.0-8000-exec-10] [TokenController-getCurrentUser:62] - Members(id=63, point=Point(id=20, accumulatePoint=-100, currentPoint=-100), permission=Permission(id=1, permission=USER), email=hhh@naver.com, password=$2a$10$ygLdbYPG9Gkuu38RQv71YOMKX.zXIilcOdWExl.VqYi2RNBrW2UQC, name=정휘제, tel=01065732265, status=true, address=서울시 우리집, postcode=123456, registerNumber=)
WARN  24-05-29 23:43:01 [http-nio-0.0.0.0-8000-exec-6] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:43:01 [http-nio-0.0.0.0-8000-exec-4] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
INFO  24-05-29 23:43:48 [SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean-destroy:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  24-05-29 23:43:48 [SpringApplicationShutdownHook] [HikariDataSource-close:350] - HikariPool-1 - Shutdown initiated...
INFO  24-05-29 23:43:48 [SpringApplicationShutdownHook] [HikariDataSource-close:352] - HikariPool-1 - Shutdown completed.
INFO  24-05-29 23:43:59 [main] [DsilBackendApplication-logStarting:50] - Starting DsilBackendApplication using Java 17.0.10 with PID 11729 (/Users/yunhosang/Desktop/dsilback/DSILbackend/target/classes started by yunhosang in /Users/yunhosang/Desktop/dsilback/DSILbackend)
INFO  24-05-29 23:43:59 [main] [DsilBackendApplication-logStartupProfileInfo:654] - No active profile set, falling back to 1 default profile: "default"
INFO  24-05-29 23:44:01 [main] [RepositoryConfigurationDelegate-multipleStoresDetected:295] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  24-05-29 23:44:01 [main] [RepositoryConfigurationDelegate-registerRepositoriesIn:143] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-05-29 23:44:01 [main] [RepositoryConfigurationDelegate-registerRepositoriesIn:211] - Finished Spring Data repository scanning in 381 ms. Found 22 JPA repository interfaces.
INFO  24-05-29 23:44:01 [main] [RepositoryConfigurationDelegate-multipleStoresDetected:295] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  24-05-29 23:44:01 [main] [RepositoryConfigurationDelegate-registerRepositoriesIn:143] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  24-05-29 23:44:01 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.AvailableTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 23:44:01 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.BookmarkRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 23:44:01 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 23:44:01 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.FacilityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 23:44:01 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.InformRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 23:44:01 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 23:44:01 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.MenuRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 23:44:01 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.MyDiningRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 23:44:01 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 23:44:01 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.PermissionManageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 23:44:01 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.PointManageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 23:44:01 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.RefreshRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 23:44:01 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.ReplyManageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 23:44:01 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.ReplyRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 23:44:01 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.ReservationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 23:44:01 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.ReserveRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 23:44:01 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.RestaurantListRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 23:44:01 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.RestaurantManageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 23:44:01 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.RestaurantRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 23:44:01 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.ReviewManageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 23:44:01 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.ReviewRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 23:44:01 [main] [RepositoryConfigurationExtensionSupport-isStrictRepositoryCandidate:320] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ssg.dsilbackend.repository.UserManageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  24-05-29 23:44:01 [main] [RepositoryConfigurationDelegate-registerRepositoriesIn:211] - Finished Spring Data repository scanning in 20 ms. Found 0 Redis repository interfaces.
WARN  24-05-29 23:44:02 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 23:44:02 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 23:44:02 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 23:44:02 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'jdbcConnectionDetails' of type [org.springframework.boot.autoconfigure.jdbc.PropertiesJdbcConnectionDetails] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 23:44:02 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'dataSource' of type [com.zaxxer.hikari.HikariDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 23:44:02 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties' of type [org.springframework.boot.autoconfigure.orm.jpa.JpaProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 23:44:02 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties' of type [org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 23:44:02 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 23:44:02 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'hikariPoolDataSourceMetadataProvider' of type [org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration$$Lambda$754/0x0000000118477898] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 23:44:02 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' of type [org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 23:44:02 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 23:44:02 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'transactionExecutionListeners' of type [org.springframework.boot.autoconfigure.transaction.ExecutionListenersTransactionManagerCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 23:44:02 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 23:44:02 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 23:44:02 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration' of type [org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 23:44:02 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties' of type [org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 23:44:02 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'dataSourceScriptDatabaseInitializer' of type [org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 23:44:02 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'org.springframework.boot.autoconfigure.batch.BatchAutoConfiguration$DataSourceInitializerConfiguration' of type [org.springframework.boot.autoconfigure.batch.BatchAutoConfiguration$DataSourceInitializerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 23:44:02 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'spring.batch-org.springframework.boot.autoconfigure.batch.BatchProperties' of type [org.springframework.boot.autoconfigure.batch.BatchProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
INFO  24-05-29 23:44:02 [main] [HikariDataSource-getConnection:110] - HikariPool-1 - Starting...
INFO  24-05-29 23:44:02 [main] [HikariPool-checkFailFast:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4602f874
INFO  24-05-29 23:44:02 [main] [HikariDataSource-getConnection:123] - HikariPool-1 - Start completed.
WARN  24-05-29 23:44:02 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'batchDataSourceInitializer' of type [org.springframework.boot.autoconfigure.batch.BatchDataSourceScriptDatabaseInitializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 23:44:02 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'jpaVendorAdapter' of type [org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 23:44:02 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'entityManagerFactoryBuilder' of type [org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 23:44:02 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'persistenceManagedTypes' of type [org.springframework.orm.jpa.persistenceunit.SimplePersistenceManagedTypes] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
INFO  24-05-29 23:44:02 [main] [LogHelper-logPersistenceUnitInformation:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-05-29 23:44:02 [main] [Version-logVersion:44] - HHH000412: Hibernate ORM core version 6.4.4.Final
INFO  24-05-29 23:44:02 [main] [RegionFactoryInitiator-initiateService:50] - HHH000026: Second-level cache disabled
INFO  24-05-29 23:44:03 [main] [SpringPersistenceUnitInfo-addTransformer:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
WARN  24-05-29 23:44:03 [main] [deprecation-constructDialect:153] - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
INFO  24-05-29 23:44:05 [main] [JtaPlatformInitiator-initiateService:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
INFO  24-05-29 23:44:05 [main] [LocalContainerEntityManagerFactoryBean-buildNativeEntityManagerFactory:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  24-05-29 23:44:05 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'entityManagerFactory' of type [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 23:44:05 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'entityManagerFactory' of type [jdk.proxy2.$Proxy123] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 23:44:05 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:437] - Bean 'transactionManager' of type [org.springframework.orm.jpa.JpaTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
WARN  24-05-29 23:44:05 [main] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker-postProcessAfterInitialization:429] - Bean 'org.springframework.boot.autoconfigure.batch.BatchAutoConfiguration$SpringBootBatchConfiguration' of type [org.springframework.boot.autoconfigure.batch.BatchAutoConfiguration$SpringBootBatchConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [jobRegistryBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
INFO  24-05-29 23:44:05 [main] [TomcatWebServer-initialize:109] - Tomcat initialized with port 8000 (http)
INFO  24-05-29 23:44:05 [main] [Http11NioProtocol-log:173] - Initializing ProtocolHandler ["http-nio-0.0.0.0-8000"]
INFO  24-05-29 23:44:05 [main] [StandardService-log:173] - Starting service [Tomcat]
INFO  24-05-29 23:44:05 [main] [StandardEngine-log:173] - Starting Servlet engine: [Apache Tomcat/10.1.20]
INFO  24-05-29 23:44:06 [main] [[/]-log:173] - Initializing Spring embedded WebApplicationContext
INFO  24-05-29 23:44:06 [main] [ServletWebServerApplicationContext-prepareWebApplicationContext:296] - Root WebApplicationContext: initialization completed in 6337 ms
INFO  24-05-29 23:44:06 [main] [QueryEnhancerFactory-<clinit>:49] - Hibernate is in classpath; If applicable, HQL parser will be used.
WARN  24-05-29 23:44:09 [main] [JpaBaseConfiguration$JpaWebConfiguration-openEntityManagerInViewInterceptor:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-05-29 23:44:10 [main] [DefaultSecurityFilterChain-<init>:54] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@77f4742b, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@39b3de87, org.springframework.security.web.context.SecurityContextHolderFilter@772ce28e, org.springframework.security.web.header.HeaderWriterFilter@27d0703e, org.springframework.web.filter.CorsFilter@f32284d, com.ssg.dsilbackend.jwt.CustomLogoutFilter@155ae856, org.springframework.security.web.authentication.logout.LogoutFilter@3ae96d5b, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@12898e77, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@7826c5ef, com.ssg.dsilbackend.jwt.JWTFilter@415b83fa, com.ssg.dsilbackend.jwt.LoginFilter@663b3ab0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@47c9b8ee, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3861f2c9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7855167a, org.springframework.security.web.session.SessionManagementFilter@5ca32d1a, org.springframework.security.web.access.ExceptionTranslationFilter@a54ab55, org.springframework.security.web.access.intercept.AuthorizationFilter@cb7ec2c]
WARN  24-05-29 23:44:10 [main] [ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration-checkTemplateLocationExists:101] - Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
INFO  24-05-29 23:44:10 [main] [Http11NioProtocol-log:173] - Starting ProtocolHandler ["http-nio-0.0.0.0-8000"]
INFO  24-05-29 23:44:10 [main] [TomcatWebServer-start:241] - Tomcat started on port 8000 (http) with context path ''
INFO  24-05-29 23:44:10 [main] [DsilBackendApplication-logStarted:56] - Started DsilBackendApplication in 12.372 seconds (process running for 13.405)
INFO  24-05-29 23:44:10 [main] [JobLauncherApplicationRunner-run:168] - Running default command line with: []
INFO  24-05-29 23:44:17 [http-nio-0.0.0.0-8000-exec-1] [[/]-log:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  24-05-29 23:44:17 [http-nio-0.0.0.0-8000-exec-1] [DispatcherServlet-initServletBean:532] - Initializing Servlet 'dispatcherServlet'
INFO  24-05-29 23:44:17 [http-nio-0.0.0.0-8000-exec-1] [DispatcherServlet-initServletBean:554] - Completed initialization in 2 ms
WARN  24-05-29 23:44:17 [http-nio-0.0.0.0-8000-exec-1] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
INFO  24-05-29 23:44:17 [http-nio-0.0.0.0-8000-exec-1] [UserManageController-postLogin:76] - 도착했는지 확인
INFO  24-05-29 23:44:17 [http-nio-0.0.0.0-8000-exec-1] [UserManageController-postLogin:77] - com.ssg.dsilbackend.dto.userManage.LoginDTO@63cc8e2
INFO  24-05-29 23:44:18 [http-nio-0.0.0.0-8000-exec-1] [UserManageController-postLogin:87] - JWT 토큰 생성 및 설정 완료
INFO  24-05-29 23:44:18 [http-nio-0.0.0.0-8000-exec-2] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTM4NTcsImV4cCI6MTcxNzA4MDI1Nywicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.dj-FjSdH4sISF_tyqhA1Gr5Q9ZZEBbGvxTSDfGf33d8
INFO  24-05-29 23:44:18 [http-nio-0.0.0.0-8000-exec-2] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 23:44:18 [http-nio-0.0.0.0-8000-exec-2] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@fdf35d3, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@45a2cded]]
INFO  24-05-29 23:44:18 [http-nio-0.0.0.0-8000-exec-2] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 23:44:18 [http-nio-0.0.0.0-8000-exec-2] [TokenController-getCurrentUser:40] - Email: hhh@naver.com
INFO  24-05-29 23:44:18 [http-nio-0.0.0.0-8000-exec-2] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 23:44:18 [http-nio-0.0.0.0-8000-exec-2] [TokenController-getCurrentUser:62] - Members(id=63, point=Point(id=20, accumulatePoint=-100, currentPoint=-100), permission=Permission(id=1, permission=USER), email=hhh@naver.com, password=$2a$10$ygLdbYPG9Gkuu38RQv71YOMKX.zXIilcOdWExl.VqYi2RNBrW2UQC, name=정휘제, tel=01065732265, status=true, address=서울시 우리집, postcode=123456, registerNumber=)
INFO  24-05-29 23:44:18 [http-nio-0.0.0.0-8000-exec-3] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTM4NTcsImV4cCI6MTcxNzA4MDI1Nywicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.dj-FjSdH4sISF_tyqhA1Gr5Q9ZZEBbGvxTSDfGf33d8
INFO  24-05-29 23:44:18 [http-nio-0.0.0.0-8000-exec-3] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 23:44:18 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@17a4e3c2, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@4a5ab857]]
INFO  24-05-29 23:44:18 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 23:44:18 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:40] - Email: hhh@naver.com
INFO  24-05-29 23:44:18 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 23:44:18 [http-nio-0.0.0.0-8000-exec-3] [TokenController-getCurrentUser:62] - Members(id=63, point=Point(id=20, accumulatePoint=-100, currentPoint=-100), permission=Permission(id=1, permission=USER), email=hhh@naver.com, password=$2a$10$ygLdbYPG9Gkuu38RQv71YOMKX.zXIilcOdWExl.VqYi2RNBrW2UQC, name=정휘제, tel=01065732265, status=true, address=서울시 우리집, postcode=123456, registerNumber=)
INFO  24-05-29 23:44:19 [http-nio-0.0.0.0-8000-exec-4] [JWTFilter-doFilterInternal:46] - Access token from header: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTM4NTcsImV4cCI6MTcxNjk5NDQ1Nywicm9sZSI6IlVTRVIiLCJuYW1lIjoi7KCV7ZyY7KCcIiwiY2F0ZWdvcnkiOiJhY2Nlc3MiLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.eyNMZQebe7oz1DjMTEs_R3DzaENb5CAeK5q4nL9vuv8
INFO  24-05-29 23:44:19 [http-nio-0.0.0.0-8000-exec-5] [JWTFilter-doFilterInternal:46] - Access token from header: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTM4NTcsImV4cCI6MTcxNjk5NDQ1Nywicm9sZSI6IlVTRVIiLCJuYW1lIjoi7KCV7ZyY7KCcIiwiY2F0ZWdvcnkiOiJhY2Nlc3MiLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.eyNMZQebe7oz1DjMTEs_R3DzaENb5CAeK5q4nL9vuv8
INFO  24-05-29 23:44:19 [http-nio-0.0.0.0-8000-exec-6] [JWTFilter-doFilterInternal:46] - Access token from header: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTM4NTcsImV4cCI6MTcxNjk5NDQ1Nywicm9sZSI6IlVTRVIiLCJuYW1lIjoi7KCV7ZyY7KCcIiwiY2F0ZWdvcnkiOiJhY2Nlc3MiLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.eyNMZQebe7oz1DjMTEs_R3DzaENb5CAeK5q4nL9vuv8
INFO  24-05-29 23:44:19 [http-nio-0.0.0.0-8000-exec-6] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 23:44:19 [http-nio-0.0.0.0-8000-exec-4] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 23:44:19 [http-nio-0.0.0.0-8000-exec-5] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 23:44:24 [http-nio-0.0.0.0-8000-exec-7] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTM4NTcsImV4cCI6MTcxNzA4MDI1Nywicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.dj-FjSdH4sISF_tyqhA1Gr5Q9ZZEBbGvxTSDfGf33d8
INFO  24-05-29 23:44:24 [http-nio-0.0.0.0-8000-exec-7] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 23:44:24 [http-nio-0.0.0.0-8000-exec-7] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@3292703f, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@61f1464a]]
INFO  24-05-29 23:44:24 [http-nio-0.0.0.0-8000-exec-7] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 23:44:24 [http-nio-0.0.0.0-8000-exec-7] [TokenController-getCurrentUser:40] - Email: hhh@naver.com
INFO  24-05-29 23:44:24 [http-nio-0.0.0.0-8000-exec-7] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 23:44:24 [http-nio-0.0.0.0-8000-exec-7] [TokenController-getCurrentUser:62] - Members(id=63, point=Point(id=20, accumulatePoint=-100, currentPoint=-100), permission=Permission(id=1, permission=USER), email=hhh@naver.com, password=$2a$10$ygLdbYPG9Gkuu38RQv71YOMKX.zXIilcOdWExl.VqYi2RNBrW2UQC, name=정휘제, tel=01065732265, status=true, address=서울시 우리집, postcode=123456, registerNumber=)
INFO  24-05-29 23:44:24 [http-nio-0.0.0.0-8000-exec-8] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTM4NTcsImV4cCI6MTcxNzA4MDI1Nywicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.dj-FjSdH4sISF_tyqhA1Gr5Q9ZZEBbGvxTSDfGf33d8
INFO  24-05-29 23:44:24 [http-nio-0.0.0.0-8000-exec-8] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 23:44:24 [http-nio-0.0.0.0-8000-exec-8] [TokenController-getCurrentUser:32] - UsernamePasswordAuthenticationToken [Principal=com.ssg.dsilbackend.security.CustomUserDetails@63e59852, Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[com.ssg.dsilbackend.security.CustomUserDetails$1@837c66b]]
INFO  24-05-29 23:44:24 [http-nio-0.0.0.0-8000-exec-8] [TokenController-getCurrentUser:39] - Username: null
INFO  24-05-29 23:44:24 [http-nio-0.0.0.0-8000-exec-8] [TokenController-getCurrentUser:40] - Email: hhh@naver.com
INFO  24-05-29 23:44:24 [http-nio-0.0.0.0-8000-exec-8] [TokenController-getCurrentUser:48] - Authorities: USER
INFO  24-05-29 23:44:24 [http-nio-0.0.0.0-8000-exec-8] [TokenController-getCurrentUser:62] - Members(id=63, point=Point(id=20, accumulatePoint=-100, currentPoint=-100), permission=Permission(id=1, permission=USER), email=hhh@naver.com, password=$2a$10$ygLdbYPG9Gkuu38RQv71YOMKX.zXIilcOdWExl.VqYi2RNBrW2UQC, name=정휘제, tel=01065732265, status=true, address=서울시 우리집, postcode=123456, registerNumber=)
INFO  24-05-29 23:44:24 [http-nio-0.0.0.0-8000-exec-9] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTM4NTcsImV4cCI6MTcxNzA4MDI1Nywicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.dj-FjSdH4sISF_tyqhA1Gr5Q9ZZEBbGvxTSDfGf33d8
INFO  24-05-29 23:44:24 [http-nio-0.0.0.0-8000-exec-9] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 23:44:24 [http-nio-0.0.0.0-8000-exec-9] [UserManageController-getUserData:189] - hhh@naver.com get 요청
INFO  24-05-29 23:44:28 [http-nio-0.0.0.0-8000-exec-10] [JWTFilter-doFilterInternal:37] - Refresh token from cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTM4NTcsImV4cCI6MTcxNzA4MDI1Nywicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.dj-FjSdH4sISF_tyqhA1Gr5Q9ZZEBbGvxTSDfGf33d8
INFO  24-05-29 23:44:28 [http-nio-0.0.0.0-8000-exec-10] [JWTFilter-doFilterInternal:73] - 인증 성공 - 사용자 설정 완료: hhh@naver.com
INFO  24-05-29 23:44:28 [http-nio-0.0.0.0-8000-exec-10] [UserManageController-logout:55] - Found refresh token in cookie: eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTY5OTM4NTcsImV4cCI6MTcxNzA4MDI1Nywicm9sZSI6IlVTRVIiLCJjYXRlZ29yeSI6InJlZnJlc2giLCJlbWFpbCI6ImhoaEBuYXZlci5jb20ifQ.dj-FjSdH4sISF_tyqhA1Gr5Q9ZZEBbGvxTSDfGf33d8
WARN  24-05-29 23:44:28 [http-nio-0.0.0.0-8000-exec-1] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:44:29 [http-nio-0.0.0.0-8000-exec-2] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:44:29 [http-nio-0.0.0.0-8000-exec-2] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:44:29 [http-nio-0.0.0.0-8000-exec-3] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:44:29 [http-nio-0.0.0.0-8000-exec-3] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:44:29 [http-nio-0.0.0.0-8000-exec-4] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:44:29 [http-nio-0.0.0.0-8000-exec-4] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:44:29 [http-nio-0.0.0.0-8000-exec-5] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:44:29 [http-nio-0.0.0.0-8000-exec-5] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:44:29 [http-nio-0.0.0.0-8000-exec-6] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:44:29 [http-nio-0.0.0.0-8000-exec-6] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:44:29 [http-nio-0.0.0.0-8000-exec-7] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:44:29 [http-nio-0.0.0.0-8000-exec-7] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:44:29 [http-nio-0.0.0.0-8000-exec-8] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:44:29 [http-nio-0.0.0.0-8000-exec-8] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:44:29 [http-nio-0.0.0.0-8000-exec-9] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:44:29 [http-nio-0.0.0.0-8000-exec-9] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:44:29 [http-nio-0.0.0.0-8000-exec-10] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:44:29 [http-nio-0.0.0.0-8000-exec-10] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:44:29 [http-nio-0.0.0.0-8000-exec-1] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:44:29 [http-nio-0.0.0.0-8000-exec-1] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:44:29 [http-nio-0.0.0.0-8000-exec-2] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:44:29 [http-nio-0.0.0.0-8000-exec-2] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:44:29 [http-nio-0.0.0.0-8000-exec-3] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:44:29 [http-nio-0.0.0.0-8000-exec-3] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:44:29 [http-nio-0.0.0.0-8000-exec-4] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:44:29 [http-nio-0.0.0.0-8000-exec-4] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:44:29 [http-nio-0.0.0.0-8000-exec-5] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:44:29 [http-nio-0.0.0.0-8000-exec-5] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:44:29 [http-nio-0.0.0.0-8000-exec-6] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:44:29 [http-nio-0.0.0.0-8000-exec-6] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:44:29 [http-nio-0.0.0.0-8000-exec-7] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:44:29 [http-nio-0.0.0.0-8000-exec-7] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:44:29 [http-nio-0.0.0.0-8000-exec-8] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:44:29 [http-nio-0.0.0.0-8000-exec-8] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:44:29 [http-nio-0.0.0.0-8000-exec-9] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:44:29 [http-nio-0.0.0.0-8000-exec-9] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:44:29 [http-nio-0.0.0.0-8000-exec-10] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:44:29 [http-nio-0.0.0.0-8000-exec-10] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
WARN  24-05-29 23:44:29 [http-nio-0.0.0.0-8000-exec-1] [JWTFilter-doFilterInternal:51] - 토큰이 없거나 만료됨
WARN  24-05-29 23:44:29 [http-nio-0.0.0.0-8000-exec-1] [DefaultHandlerExceptionResolver-logException:247] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
INFO  24-05-29 23:44:40 [SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean-destroy:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  24-05-29 23:44:40 [SpringApplicationShutdownHook] [HikariDataSource-close:350] - HikariPool-1 - Shutdown initiated...
INFO  24-05-29 23:44:40 [SpringApplicationShutdownHook] [HikariDataSource-close:352] - HikariPool-1 - Shutdown completed.
